{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2","program":"C:\\Users\\Matthew\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","ureq","--edition=2018","C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"native-tls\"","-C","metadata=20ac3eb828b27cde","-C","extra-filename=-20ac3eb828b27cde","--out-dir","c:\\dev\\Scribe\\rust-bindings\\native\\target\\rls\\debug\\deps","-L","dependency=c:\\dev\\Scribe\\rust-bindings\\native\\target\\rls\\debug\\deps","--extern","base64=c:\\dev\\Scribe\\rust-bindings\\native\\target\\rls\\debug\\deps\\libbase64-003af79048a81aef.rmeta","--extern","chunked_transfer=c:\\dev\\Scribe\\rust-bindings\\native\\target\\rls\\debug\\deps\\libchunked_transfer-47b21cd9589c12e6.rmeta","--extern","log=c:\\dev\\Scribe\\rust-bindings\\native\\target\\rls\\debug\\deps\\liblog-6761433b4d748ace.rmeta","--extern","native_tls=c:\\dev\\Scribe\\rust-bindings\\native\\target\\rls\\debug\\deps\\libnative_tls-50e6e577b130846d.rmeta","--extern","once_cell=c:\\dev\\Scribe\\rust-bindings\\native\\target\\rls\\debug\\deps\\libonce_cell-791e2d21721e42ae.rmeta","--extern","qstring=c:\\dev\\Scribe\\rust-bindings\\native\\target\\rls\\debug\\deps\\libqstring-4406f7ceef2f401b.rmeta","--extern","url=c:\\dev\\Scribe\\rust-bindings\\native\\target\\rls\\debug\\deps\\liburl-2b2953e520bf14e0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Matthew\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\dev\\Scribe\\rust-bindings\\native\\target\\rls\\debug\\deps\\libureq-20ac3eb828b27cde.rmeta"},"prelude":{"crate_id":{"name":"ureq","disambiguator":[1260701074687853534,15748620722266012296]},"crate_root":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src","external_crates":[{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[45344308337484766,904807583985397655]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[17608585110195136257,12532935013018738971]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10644633998059158352,10345665241509147306]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18212625787733517551,4937265065110821766]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2699922135837212616,11588109643627721037]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16653465091603201180,18239440457404116996]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3073254730555026972,7758270140448631200]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13759999943095835806,4978516890064261122]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4575299228079760236,9361028770882531394]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10307147502021998988,15592389341950453369]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2670035867216739096,10315597156951015330]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7309248630993686720,3186694738066578297]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","num":13,"id":{"name":"url","disambiguator":[14578506411354532158,1454869338555072306]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","num":14,"id":{"name":"matches","disambiguator":[1021209420995783879,3897084315521303536]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","num":15,"id":{"name":"form_urlencoded","disambiguator":[8546375871175070870,17862098032074385750]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","num":16,"id":{"name":"percent_encoding","disambiguator":[913815253098237545,3513574134546583157]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","num":17,"id":{"name":"idna","disambiguator":[7875352419619026545,16757487469474224379]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","num":18,"id":{"name":"unicode_bidi","disambiguator":[4685610560525268419,1139573495800414305]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","num":19,"id":{"name":"unicode_normalization","disambiguator":[5782994597334173305,7132071689891743639]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","num":20,"id":{"name":"tinyvec","disambiguator":[1865512712684555133,3206982447419971068]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","num":21,"id":{"name":"tinyvec_macros","disambiguator":[16723017708974800262,10339325022551688117]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","num":22,"id":{"name":"qstring","disambiguator":[10377437291540449409,4804493122534407018]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","num":23,"id":{"name":"chunked_transfer","disambiguator":[5684308340629189178,1934598707513466566]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","num":24,"id":{"name":"native_tls","disambiguator":[5771243972179362093,5335704081466616361]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","num":25,"id":{"name":"schannel","disambiguator":[3997822222772679923,11327332874559052486]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","num":26,"id":{"name":"winapi","disambiguator":[7673388047968797843,11491705224694166119]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","num":27,"id":{"name":"lazy_static","disambiguator":[4609195866430104711,6620482562405215201]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\unit.rs","num":28,"id":{"name":"log","disambiguator":[8978591659665633603,7755168014803363705]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\unit.rs","num":29,"id":{"name":"cfg_if","disambiguator":[12970691034966820457,8323427894965170245]}},{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","num":30,"id":{"name":"base64","disambiguator":[1051403288822456850,2132402931956153560]}}],"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":0,"byte_end":7551,"line_start":1,"line_end":239,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5159,"byte_end":5164,"line_start":139,"line_end":139,"column_start":23,"column_end":28},"alias_span":null,"name":"Agent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5188,"byte_end":5193,"line_start":140,"line_end":140,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5218,"byte_end":5224,"line_start":141,"line_end":141,"column_start":24,"column_end":30},"alias_span":null,"name":"Header","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5248,"byte_end":5253,"line_start":142,"line_end":142,"column_start":23,"column_end":28},"alias_span":null,"name":"Proxy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5279,"byte_end":5286,"line_start":143,"line_end":143,"column_start":25,"column_end":32},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5312,"byte_end":5320,"line_start":144,"line_end":144,"column_start":25,"column_end":33},"alias_span":null,"name":"Resolver","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5347,"byte_end":5355,"line_start":145,"line_end":145,"column_start":26,"column_end":34},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":0,"byte_end":7551,"line_start":1,"line_end":239,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":37},{"krate":0,"index":85},{"krate":0,"index":100},{"krate":0,"index":130},{"krate":0,"index":175},{"krate":0,"index":189},{"krate":0,"index":268},{"krate":0,"index":293},{"krate":0,"index":401},{"krate":0,"index":478},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"decl_id":null,"docs":" ureq is a minimal request library.","sig":null,"attributes":[{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":0,"byte_end":23,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"warn(clippy :: all)","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":24,"byte_end":45,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"/ ureq is a minimal request library.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":46,"byte_end":84,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":85,"byte_end":88,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The goals of this library are:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":89,"byte_end":123,"line_start":5,"line_end":5,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":124,"byte_end":127,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * Minimal dependency tree","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":128,"byte_end":157,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"/ * Obvious API","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":158,"byte_end":175,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/ * Blocking API","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":176,"byte_end":194,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"/ * Convenience over correctness","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":195,"byte_end":229,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ * No use of unsafe","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":230,"byte_end":252,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":253,"byte_end":256,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":257,"byte_end":264,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ // requires feature: `ureq = { version = \"*\", features = [\"json\"] }`","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":265,"byte_end":337,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ # #[cfg(feature = \"json\")] {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":338,"byte_end":370,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/ use ureq::json;","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":371,"byte_end":390,"line_start":16,"line_end":16,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":391,"byte_end":394,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":395,"byte_end":433,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/   // sync post request of some json.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":434,"byte_end":474,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/   let resp = ureq::post(\"https://myapi.example.com/ingest\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":475,"byte_end":538,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/       .set(\"X-My-Header\", \"Secret\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":539,"byte_end":578,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/       .send_json(json!({","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":579,"byte_end":607,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/           \"name\": \"martin\",","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":608,"byte_end":639,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/           \"rust\": true","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":640,"byte_end":666,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/       }));","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":667,"byte_end":681,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":682,"byte_end":685,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/   // .ok() tells if response is 200-299.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":686,"byte_end":730,"line_start":27,"line_end":27,"column_start":1,"column_end":45}},{"value":"/   if resp.ok() {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":731,"byte_end":751,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/     println!(\"success: {}\", resp.into_string()?);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":752,"byte_end":805,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":806,"byte_end":820,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/     // This can include errors like failure to parse URL or connect timeout.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":821,"byte_end":901,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/     // They are treated as synthetic HTTP-level error statuses.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":902,"byte_end":969,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/     println!(\"error {}: {}\", resp.status(), resp.into_string()?);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":970,"byte_end":1039,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/   }","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1040,"byte_end":1047,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/   Ok(())","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1048,"byte_end":1060,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1061,"byte_end":1066,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1067,"byte_end":1074,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1075,"byte_end":1082,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1083,"byte_end":1086,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Plain requests","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1087,"byte_end":1107,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1108,"byte_end":1111,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Most standard methods (GET, POST, PUT etc), are supported as functions from the","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1112,"byte_end":1195,"line_start":42,"line_end":42,"column_start":1,"column_end":84}},{"value":"/ top of the library ([`ureq::get`](fn.get.html), [`ureq::post`](fn.post.html),","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1196,"byte_end":1277,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/ [`ureq::put`](fn.put.html), etc).","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1278,"byte_end":1315,"line_start":44,"line_end":44,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1316,"byte_end":1319,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ These top level http method functions create a [Request](struct.Request.html) instance","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1320,"byte_end":1410,"line_start":46,"line_end":46,"column_start":1,"column_end":91}},{"value":"/ which follows a build pattern. The builders are finished using:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1411,"byte_end":1478,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1479,"byte_end":1482,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ * [`.call()`](struct.Request.html#method.call) without a request body.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1483,"byte_end":1557,"line_start":49,"line_end":49,"column_start":1,"column_end":75}},{"value":"/ * [`.send()`](struct.Request.html#method.send) with a request body as `Read` (chunked encoding support for non-known sized readers).","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1558,"byte_end":1694,"line_start":50,"line_end":50,"column_start":1,"column_end":137}},{"value":"/ * [`.send_string()`](struct.Request.html#method.send_string) body as string.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1695,"byte_end":1775,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ * [`.send_bytes()`](struct.Request.html#method.send_bytes) body as bytes.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1776,"byte_end":1853,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ * [`.send_form()`](struct.Request.html#method.send_form) key-value pairs as application/x-www-form-urlencoded.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1854,"byte_end":1968,"line_start":53,"line_end":53,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1969,"byte_end":1972,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # JSON","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1973,"byte_end":1983,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1984,"byte_end":1987,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ By enabling the `ureq = { version = \"*\", features = [\"json\"] }` feature,","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":1988,"byte_end":2064,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ the library supports serde json.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2065,"byte_end":2101,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2102,"byte_end":2105,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ * [`request.send_json()`](struct.Request.html#method.send_json) send body as serde json.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2106,"byte_end":2198,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/ * [`response.into_json()`](struct.Response.html#method.into_json) transform response to json.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2199,"byte_end":2296,"line_start":61,"line_end":61,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2297,"byte_end":2300,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Agents","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2301,"byte_end":2313,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2314,"byte_end":2317,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ To maintain a state, cookies, between requests, you use an [agent](struct.Agent.html).","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2318,"byte_end":2408,"line_start":65,"line_end":65,"column_start":1,"column_end":91}},{"value":"/ Agents also follow the build pattern. Agents are created with","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2409,"byte_end":2474,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/ [`ureq::agent()`](struct.Agent.html).","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2475,"byte_end":2516,"line_start":67,"line_end":67,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2517,"byte_end":2520,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Content-Length","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2521,"byte_end":2541,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2542,"byte_end":2545,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The library will set the content length on the request when using","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2546,"byte_end":2615,"line_start":71,"line_end":71,"column_start":1,"column_end":70}},{"value":"/ [`.send_string()`](struct.Request.html#method.send_string) or","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2616,"byte_end":2681,"line_start":72,"line_end":72,"column_start":1,"column_end":66}},{"value":"/ [`.send_json()`](struct.Request.html#method.send_json). In other cases the user","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2682,"byte_end":2765,"line_start":73,"line_end":73,"column_start":1,"column_end":84}},{"value":"/ can optionally `request.set(\"Content-Length\", 1234)`.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2766,"byte_end":2823,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2824,"byte_end":2827,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ For responses, if the `Content-Length` header is present, the methods that reads the","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2828,"byte_end":2916,"line_start":76,"line_end":76,"column_start":1,"column_end":89}},{"value":"/ body (as string, json or read trait) are all limited to the length specified in the header.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":2917,"byte_end":3012,"line_start":77,"line_end":77,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3013,"byte_end":3016,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Transfer-Encoding: chunked","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3017,"byte_end":3049,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3050,"byte_end":3053,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Dechunking is a response body is done automatically if the response headers contains","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3054,"byte_end":3142,"line_start":81,"line_end":81,"column_start":1,"column_end":89}},{"value":"/ a `Transfer-Encoding` header.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3143,"byte_end":3176,"line_start":82,"line_end":82,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3177,"byte_end":3180,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Sending a chunked request body is done by setting the header prior to sending a body.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3181,"byte_end":3270,"line_start":84,"line_end":84,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3271,"byte_end":3274,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3275,"byte_end":3282,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/ let resp = ureq::post(\"http://my-server.com/ingest\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3283,"byte_end":3339,"line_start":87,"line_end":87,"column_start":1,"column_end":57}},{"value":"/     .set(\"Transfer-Encoding\", \"chunked\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3340,"byte_end":3384,"line_start":88,"line_end":88,"column_start":1,"column_end":45}},{"value":"/     .send_string(\"Hello world\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3385,"byte_end":3421,"line_start":89,"line_end":89,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3422,"byte_end":3429,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3430,"byte_end":3433,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Character encoding","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3434,"byte_end":3458,"line_start":92,"line_end":92,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3459,"byte_end":3462,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ By enabling the `ureq = { version = \"*\", features = [\"charset\"] }` feature,","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3463,"byte_end":3542,"line_start":94,"line_end":94,"column_start":1,"column_end":80}},{"value":"/ the library supports sending/receiving other character sets than `utf-8`.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3543,"byte_end":3620,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3621,"byte_end":3624,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ For [`response.into_string()`](struct.Response.html#method.into_string) we read the","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3625,"byte_end":3712,"line_start":97,"line_end":97,"column_start":1,"column_end":88}},{"value":"/ header `Content-Type: text/plain; charset=iso-8859-1` and if it contains a charset","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3713,"byte_end":3799,"line_start":98,"line_end":98,"column_start":1,"column_end":87}},{"value":"/ specification, we try to decode the body using that encoding. In the absence of, or failing","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3800,"byte_end":3895,"line_start":99,"line_end":99,"column_start":1,"column_end":96}},{"value":"/ to interpret the charset, we fall back on `utf-8`.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3896,"byte_end":3950,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3951,"byte_end":3954,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Similarly when using [`request.send_string()`](struct.Request.html#method.send_string),","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":3955,"byte_end":4046,"line_start":102,"line_end":102,"column_start":1,"column_end":92}},{"value":"/ we first check if the user has set a `; charset=<whatwg charset>` and attempt","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4047,"byte_end":4128,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"/ to encode the request body using that.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4129,"byte_end":4171,"line_start":104,"line_end":104,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4172,"byte_end":4175,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Synthetic errors","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4176,"byte_end":4198,"line_start":106,"line_end":106,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4199,"byte_end":4202,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Rather than exposing a custom error type through results, this library has opted for","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4203,"byte_end":4291,"line_start":108,"line_end":108,"column_start":1,"column_end":89}},{"value":"/ representing potential connection/TLS/etc errors as HTTP response codes. These invented codes","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4292,"byte_end":4389,"line_start":109,"line_end":109,"column_start":1,"column_end":98}},{"value":"/ are called \"[synthetic](struct.Response.html#method.synthetic).\"","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4390,"byte_end":4458,"line_start":110,"line_end":110,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4459,"byte_end":4462,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The idea is that from a library user's point of view the distinction of whether a failure","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4463,"byte_end":4556,"line_start":112,"line_end":112,"column_start":1,"column_end":94}},{"value":"/ originated in the remote server (500, 502) etc, or some transient network failure, the code","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4557,"byte_end":4652,"line_start":113,"line_end":113,"column_start":1,"column_end":96}},{"value":"/ path of handling that would most often be the same.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4653,"byte_end":4708,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4709,"byte_end":4712,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ As a result, reading from a Response may yield an error message generated by the ureq library.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4713,"byte_end":4811,"line_start":116,"line_end":116,"column_start":1,"column_end":99}},{"value":"/ To handle these errors, use the","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4812,"byte_end":4847,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ [`response.synthetic_error()`](struct.Response.html#method.synthetic_error) method.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4848,"byte_end":4935,"line_start":118,"line_end":118,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":4936,"byte_end":4939,"line_start":119,"line_end":119,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8632,"byte_end":8637,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"Agent","qualname":"::agent::Agent","value":"Agent {  }","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"decl_id":null,"docs":" Agents keep state between requests.","sig":null,"attributes":[{"value":"/ Agents keep state between requests.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":7898,"byte_end":7937,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":7938,"byte_end":7941,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ By default, no state, such as cookies, is kept between requests.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":7942,"byte_end":8010,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ But by creating an agent as entry point for the request, we","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8011,"byte_end":8074,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/ can keep a state.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8075,"byte_end":8096,"line_start":20,"line_end":20,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8097,"byte_end":8100,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8101,"byte_end":8108,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ let agent = ureq::agent();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8109,"byte_end":8139,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8140,"byte_end":8143,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let auth = agent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8144,"byte_end":8164,"line_start":25,"line_end":25,"column_start":1,"column_end":21}},{"value":"/     .post(\"/login\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8165,"byte_end":8188,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/     .auth(\"martin\", \"rubbermashgum\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8189,"byte_end":8229,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/     .call(); // blocks. puts auth cookies in agent.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8230,"byte_end":8285,"line_start":28,"line_end":28,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8286,"byte_end":8289,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ if !auth.ok() {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8290,"byte_end":8309,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     println!(\"Noes!\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8310,"byte_end":8336,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8337,"byte_end":8342,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8343,"byte_end":8346,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let secret = agent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8347,"byte_end":8369,"line_start":34,"line_end":34,"column_start":1,"column_end":23}},{"value":"/     .get(\"/my-protected-page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8370,"byte_end":8404,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/     .call(); // blocks and waits for request.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8405,"byte_end":8454,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8455,"byte_end":8458,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ if !secret.ok() {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8459,"byte_end":8480,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/     println!(\"Wot?!\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8481,"byte_end":8507,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8508,"byte_end":8513,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8514,"byte_end":8517,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ println!(\"Secret is: {}\", secret.into_string().unwrap());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8518,"byte_end":8579,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":8580,"byte_end":8587,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9772,"byte_end":9775,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<Agent>::new","value":"pub fn new() -> Agent","parent":null,"children":[],"decl_id":null,"docs":" Creates a new agent. Typically you'd use [`ureq::agent()`](fn.agent.html) to\n do this.","sig":null,"attributes":[{"value":"/ Creates a new agent. Typically you'd use [`ureq::agent()`](fn.agent.html) to","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9453,"byte_end":9533,"line_start":77,"line_end":77,"column_start":5,"column_end":85}},{"value":"/ do this.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9538,"byte_end":9550,"line_start":78,"line_end":78,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9555,"byte_end":9558,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9563,"byte_end":9570,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/ let agent = ureq::Agent::new()","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9575,"byte_end":9609,"line_start":81,"line_end":81,"column_start":5,"column_end":39}},{"value":"/     .set(\"X-My-Header\", \"Foo\") // present on all requests from this agent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9614,"byte_end":9691,"line_start":82,"line_end":82,"column_start":5,"column_end":82}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9696,"byte_end":9713,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9718,"byte_end":9721,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ agent.get(\"/foo\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9726,"byte_end":9748,"line_start":85,"line_end":85,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9753,"byte_end":9760,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10034,"byte_end":10039,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"build","qualname":"<Agent>::build","value":"pub fn build(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new agent after treating it as a builder.\n This actually clones the internal state to a new one and instantiates\n a new connection pool that is reused between connects.\n","sig":null,"attributes":[{"value":"/ Create a new agent after treating it as a builder.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9827,"byte_end":9881,"line_start":91,"line_end":91,"column_start":5,"column_end":59}},{"value":"/ This actually clones the internal state to a new one and instantiates","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9886,"byte_end":9959,"line_start":92,"line_end":92,"column_start":5,"column_end":78}},{"value":"/ a new connection pool that is reused between connects.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9964,"byte_end":10022,"line_start":93,"line_end":93,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10694,"byte_end":10697,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"set","qualname":"<Agent>::set","value":"pub fn set(&mut Self, &str, &str) -> &mut Agent","parent":null,"children":[],"decl_id":null,"docs":" Set a header field that will be present in all requests using the agent.","sig":null,"attributes":[{"value":"/ Set a header field that will be present in all requests using the agent.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10197,"byte_end":10273,"line_start":101,"line_end":101,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10278,"byte_end":10281,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10286,"byte_end":10293,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ let agent = ureq::agent()","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10298,"byte_end":10327,"line_start":104,"line_end":104,"column_start":5,"column_end":34}},{"value":"/     .set(\"X-API-Key\", \"foobar\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10332,"byte_end":10367,"line_start":105,"line_end":105,"column_start":5,"column_end":40}},{"value":"/     .set(\"Accept\", \"text/plain\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10372,"byte_end":10408,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10413,"byte_end":10430,"line_start":107,"line_end":107,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10435,"byte_end":10438,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ let r = agent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10443,"byte_end":10460,"line_start":109,"line_end":109,"column_start":5,"column_end":22}},{"value":"/     .get(\"/my-page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10465,"byte_end":10489,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/     .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10494,"byte_end":10510,"line_start":111,"line_end":111,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10515,"byte_end":10518,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/  if r.ok() {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10523,"byte_end":10539,"line_start":113,"line_end":113,"column_start":5,"column_end":21}},{"value":"/      println!(\"yay got {}\", r.into_string().unwrap());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10544,"byte_end":10602,"line_start":114,"line_end":114,"column_start":5,"column_end":63}},{"value":"/  } else {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10607,"byte_end":10620,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/      println!(\"Oh no error!\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10625,"byte_end":10659,"line_start":116,"line_end":116,"column_start":5,"column_end":39}},{"value":"/  }","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10664,"byte_end":10670,"line_start":117,"line_end":117,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10675,"byte_end":10682,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11173,"byte_end":11177,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"auth","qualname":"<Agent>::auth","value":"pub fn auth(&mut Self, &str, &str) -> &mut Agent","parent":null,"children":[],"decl_id":null,"docs":" Basic auth that will be present in all requests using the agent.","sig":null,"attributes":[{"value":"/ Basic auth that will be present in all requests using the agent.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10851,"byte_end":10919,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10924,"byte_end":10927,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10932,"byte_end":10939,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ let agent = ureq::agent()","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10944,"byte_end":10973,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/     .auth(\"martin\", \"rubbermashgum\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":10978,"byte_end":11018,"line_start":128,"line_end":128,"column_start":5,"column_end":45}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11023,"byte_end":11040,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11045,"byte_end":11048,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let r = agent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11053,"byte_end":11070,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/     .get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11075,"byte_end":11099,"line_start":132,"line_end":132,"column_start":5,"column_end":29}},{"value":"/     .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11104,"byte_end":11120,"line_start":133,"line_end":133,"column_start":5,"column_end":21}},{"value":"/ println!(\"{:?}\", r);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11125,"byte_end":11149,"line_start":134,"line_end":134,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11154,"byte_end":11161,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11715,"byte_end":11724,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"auth_kind","qualname":"<Agent>::auth_kind","value":"pub fn auth_kind(&mut Self, &str, &str) -> &mut Agent","parent":null,"children":[],"decl_id":null,"docs":" Auth of other kinds such as `Digest`, `Token` etc, that will be present\n in all requests using the agent.","sig":null,"attributes":[{"value":"/ Auth of other kinds such as `Digest`, `Token` etc, that will be present","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11322,"byte_end":11397,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ in all requests using the agent.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11402,"byte_end":11438,"line_start":142,"line_end":142,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11443,"byte_end":11446,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11451,"byte_end":11458,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ // sets a header \"Authorization: token secret\"","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11463,"byte_end":11513,"line_start":145,"line_end":145,"column_start":5,"column_end":55}},{"value":"/ let agent = ureq::agent()","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11518,"byte_end":11547,"line_start":146,"line_end":146,"column_start":5,"column_end":34}},{"value":"/     .auth_kind(\"token\", \"secret\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11552,"byte_end":11589,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11594,"byte_end":11611,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11616,"byte_end":11619,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ let r = agent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11624,"byte_end":11641,"line_start":150,"line_end":150,"column_start":5,"column_end":22}},{"value":"/     .get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11646,"byte_end":11670,"line_start":151,"line_end":151,"column_start":5,"column_end":29}},{"value":"/     .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11675,"byte_end":11691,"line_start":152,"line_end":152,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11696,"byte_end":11703,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12155,"byte_end":12162,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"request","qualname":"<Agent>::request","value":"pub fn request(&Self, &str, &str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Request by providing the HTTP verb such as `GET`, `POST`...","sig":null,"attributes":[{"value":"/ Request by providing the HTTP verb such as `GET`, `POST`...","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11893,"byte_end":11956,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11961,"byte_end":11964,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11969,"byte_end":11976,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ let agent = ureq::agent();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":11981,"byte_end":12011,"line_start":163,"line_end":163,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12016,"byte_end":12019,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let r = agent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12024,"byte_end":12041,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/     .request(\"GET\", \"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12046,"byte_end":12081,"line_start":166,"line_end":166,"column_start":5,"column_end":40}},{"value":"/     .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12086,"byte_end":12102,"line_start":167,"line_end":167,"column_start":5,"column_end":21}},{"value":"/ println!(\"{:?}\", r);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12107,"byte_end":12131,"line_start":168,"line_end":168,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12136,"byte_end":12143,"line_start":169,"line_end":169,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12577,"byte_end":12601,"line_start":182,"line_end":182,"column_start":12,"column_end":36},"name":"set_max_pool_connections","qualname":"<Agent>::set_max_pool_connections","value":"pub fn set_max_pool_connections(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of connections allowed in the connection pool.\n By default, this is set to 100. Setting this to zero would disable\n connection pooling.","sig":null,"attributes":[{"value":"/ Sets the maximum number of connections allowed in the connection pool.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12276,"byte_end":12350,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ By default, this is set to 100. Setting this to zero would disable","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12355,"byte_end":12425,"line_start":175,"line_end":175,"column_start":5,"column_end":75}},{"value":"/ connection pooling.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12430,"byte_end":12453,"line_start":176,"line_end":176,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12458,"byte_end":12461,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12466,"byte_end":12473,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ let agent = ureq::agent();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12478,"byte_end":12508,"line_start":179,"line_end":179,"column_start":5,"column_end":35}},{"value":"/ agent.set_max_pool_connections(200);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12513,"byte_end":12553,"line_start":180,"line_end":180,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12558,"byte_end":12565,"line_start":181,"line_end":181,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13076,"byte_end":13109,"line_start":195,"line_end":195,"column_start":12,"column_end":45},"name":"set_max_pool_connections_per_host","qualname":"<Agent>::set_max_pool_connections_per_host","value":"pub fn set_max_pool_connections_per_host(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of connections per host to keep in the\n connection pool. By default, this is set to 1. Setting this to zero\n would disable connection pooling.","sig":null,"attributes":[{"value":"/ Sets the maximum number of connections per host to keep in the","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12760,"byte_end":12826,"line_start":187,"line_end":187,"column_start":5,"column_end":71}},{"value":"/ connection pool. By default, this is set to 1. Setting this to zero","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12831,"byte_end":12902,"line_start":188,"line_end":188,"column_start":5,"column_end":76}},{"value":"/ would disable connection pooling.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12907,"byte_end":12944,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12949,"byte_end":12952,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12957,"byte_end":12964,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ let agent = ureq::agent();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":12969,"byte_end":12999,"line_start":192,"line_end":192,"column_start":5,"column_end":35}},{"value":"/ agent.set_max_pool_connections_per_host(10);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13004,"byte_end":13052,"line_start":193,"line_end":193,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13057,"byte_end":13064,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":14161,"byte_end":14173,"line_start":220,"line_end":220,"column_start":12,"column_end":24},"name":"set_resolver","qualname":"<Agent>::set_resolver","value":"pub fn set_resolver<impl crate::Resolver + 'static: crate::Resolver +\n                    'static>(&mut Self, impl crate::Resolver + 'static)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a custom resolver to be used by this agent. By default,\n address-resolution is done by std::net::ToSocketAddrs. This allows you\n to override that resolution with your own alternative. Useful for\n testing and special-cases like DNS-based load balancing.","sig":null,"attributes":[{"value":"/ Configures a custom resolver to be used by this agent. By default,","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13303,"byte_end":13373,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ address-resolution is done by std::net::ToSocketAddrs. This allows you","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13378,"byte_end":13452,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ to override that resolution with your own alternative. Useful for","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13457,"byte_end":13526,"line_start":204,"line_end":204,"column_start":5,"column_end":74}},{"value":"/ testing and special-cases like DNS-based load balancing.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13531,"byte_end":13591,"line_start":205,"line_end":205,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13596,"byte_end":13599,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ A `Fn(&str) -> io::Result<Vec<SocketAddr>>` is a valid resolver,","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13604,"byte_end":13672,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ passing a closure is a simple way to override. Note that you might need","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13677,"byte_end":13752,"line_start":208,"line_end":208,"column_start":5,"column_end":80}},{"value":"/ explicit type `&str` on the closure argument for type inference to","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13757,"byte_end":13827,"line_start":209,"line_end":209,"column_start":5,"column_end":75}},{"value":"/ succeed.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13832,"byte_end":13844,"line_start":210,"line_end":210,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13849,"byte_end":13856,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use std::net::ToSocketAddrs;","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13861,"byte_end":13893,"line_start":212,"line_end":212,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13898,"byte_end":13901,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let mut agent = ureq::agent();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13906,"byte_end":13940,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/ agent.set_resolver(|addr: &str| match addr {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13945,"byte_end":13993,"line_start":215,"line_end":215,"column_start":5,"column_end":53}},{"value":"/    \"example.com\" => Ok(vec![([127,0,0,1], 8096).into()]),","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":13998,"byte_end":14059,"line_start":216,"line_end":216,"column_start":5,"column_end":66}},{"value":"/    addr => addr.to_socket_addrs().map(Iterator::collect),","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":14064,"byte_end":14125,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/ });","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":14130,"byte_end":14137,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":14142,"byte_end":14149,"line_start":219,"line_end":219,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":14624,"byte_end":14633,"line_start":234,"line_end":234,"column_start":12,"column_end":21},"name":"set_proxy","qualname":"<Agent>::set_proxy","value":"pub fn set_proxy(&mut Self, Proxy) -> &mut Agent","parent":null,"children":[],"decl_id":null,"docs":" Set the proxy server to use for all connections from this Agent.","sig":null,"attributes":[{"value":"/ Set the proxy server to use for all connections from this Agent.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":14329,"byte_end":14397,"line_start":225,"line_end":225,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":14402,"byte_end":14405,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":14410,"byte_end":14422,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":14427,"byte_end":14434,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ let proxy = ureq::Proxy::new(\"user:password@cool.proxy:9090\").unwrap();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":14439,"byte_end":14514,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ let agent = ureq::agent()","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":14519,"byte_end":14548,"line_start":230,"line_end":230,"column_start":5,"column_end":34}},{"value":"/     .set_proxy(proxy)","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":14553,"byte_end":14578,"line_start":231,"line_end":231,"column_start":5,"column_end":30}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":14583,"byte_end":14600,"line_start":232,"line_end":232,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":14605,"byte_end":14612,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":16945,"byte_end":16948,"line_start":308,"line_end":308,"column_start":12,"column_end":15},"name":"get","qualname":"<Agent>::get","value":"pub fn get(&Self, &str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make a GET request from this agent.\n","sig":null,"attributes":[{"value":"/ Make a GET request from this agent.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":16894,"byte_end":16933,"line_start":307,"line_end":307,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":17078,"byte_end":17082,"line_start":313,"line_end":313,"column_start":12,"column_end":16},"name":"head","qualname":"<Agent>::head","value":"pub fn head(&Self, &str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make a HEAD request from this agent.\n","sig":null,"attributes":[{"value":"/ Make a HEAD request from this agent.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":17026,"byte_end":17066,"line_start":312,"line_end":312,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":17213,"byte_end":17217,"line_start":318,"line_end":318,"column_start":12,"column_end":16},"name":"post","qualname":"<Agent>::post","value":"pub fn post(&Self, &str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make a POST request from this agent.\n","sig":null,"attributes":[{"value":"/ Make a POST request from this agent.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":17161,"byte_end":17201,"line_start":317,"line_end":317,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":17347,"byte_end":17350,"line_start":323,"line_end":323,"column_start":12,"column_end":15},"name":"put","qualname":"<Agent>::put","value":"pub fn put(&Self, &str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make a PUT request from this agent.\n","sig":null,"attributes":[{"value":"/ Make a PUT request from this agent.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":17296,"byte_end":17335,"line_start":322,"line_end":322,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":17482,"byte_end":17488,"line_start":328,"line_end":328,"column_start":12,"column_end":18},"name":"delete","qualname":"<Agent>::delete","value":"pub fn delete(&Self, &str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make a DELETE request from this agent.\n","sig":null,"attributes":[{"value":"/ Make a DELETE request from this agent.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":17428,"byte_end":17470,"line_start":327,"line_end":327,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":17622,"byte_end":17627,"line_start":333,"line_end":333,"column_start":12,"column_end":17},"name":"trace","qualname":"<Agent>::trace","value":"pub fn trace(&Self, &str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make a TRACE request from this agent.\n","sig":null,"attributes":[{"value":"/ Make a TRACE request from this agent.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":17569,"byte_end":17610,"line_start":332,"line_end":332,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":17762,"byte_end":17769,"line_start":338,"line_end":338,"column_start":12,"column_end":19},"name":"options","qualname":"<Agent>::options","value":"pub fn options(&Self, &str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make a OPTIONS request from this agent.\n","sig":null,"attributes":[{"value":"/ Make a OPTIONS request from this agent.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":17707,"byte_end":17750,"line_start":337,"line_end":337,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":17904,"byte_end":17909,"line_start":343,"line_end":343,"column_start":12,"column_end":17},"name":"patch","qualname":"<Agent>::patch","value":"pub fn patch(&Self, &str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make a PATCH request from this agent.\n","sig":null,"attributes":[{"value":"/ Make a PATCH request from this agent.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":17851,"byte_end":17892,"line_start":342,"line_end":342,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26237,"byte_end":26243,"line_start":8,"line_end":8,"column_start":5,"column_end":11},"name":"BadUrl","qualname":"::error::Error::BadUrl","value":"Error::BadUrl(String)","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" The url could not be understood. Synthetic error `400`.\n","sig":null,"attributes":[{"value":"/ The url could not be understood. Synthetic error `400`.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26173,"byte_end":26232,"line_start":7,"line_end":7,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26328,"byte_end":26341,"line_start":10,"line_end":10,"column_start":5,"column_end":18},"name":"UnknownScheme","qualname":"::error::Error::UnknownScheme","value":"Error::UnknownScheme(String)","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" The url scheme could not be understood. Synthetic error `400`.\n","sig":null,"attributes":[{"value":"/ The url scheme could not be understood. Synthetic error `400`.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26257,"byte_end":26323,"line_start":9,"line_end":9,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26405,"byte_end":26414,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"name":"DnsFailed","qualname":"::error::Error::DnsFailed","value":"Error::DnsFailed(String)","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" DNS lookup failed. Synthetic error `400`.\n","sig":null,"attributes":[{"value":"/ DNS lookup failed. Synthetic error `400`.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26355,"byte_end":26400,"line_start":11,"line_end":11,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26488,"byte_end":26504,"line_start":14,"line_end":14,"column_start":5,"column_end":21},"name":"ConnectionFailed","qualname":"::error::Error::ConnectionFailed","value":"Error::ConnectionFailed(String)","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" Connection to server failed. Synthetic error `500`.\n","sig":null,"attributes":[{"value":"/ Connection to server failed. Synthetic error `500`.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26428,"byte_end":26483,"line_start":13,"line_end":13,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26569,"byte_end":26585,"line_start":16,"line_end":16,"column_start":5,"column_end":21},"name":"TooManyRedirects","qualname":"::error::Error::TooManyRedirects","value":"Error::TooManyRedirects","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" Too many redirects. Synthetic error `500`.\n","sig":null,"attributes":[{"value":"/ Too many redirects. Synthetic error `500`.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26518,"byte_end":26564,"line_start":15,"line_end":15,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26675,"byte_end":26684,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"name":"BadStatus","qualname":"::error::Error::BadStatus","value":"Error::BadStatus","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" A status line we don't understand `HTTP/1.1 200 OK`. Synthetic error `500`.\n","sig":null,"attributes":[{"value":"/ A status line we don't understand `HTTP/1.1 200 OK`. Synthetic error `500`.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26591,"byte_end":26670,"line_start":17,"line_end":17,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26760,"byte_end":26769,"line_start":20,"line_end":20,"column_start":5,"column_end":14},"name":"BadHeader","qualname":"::error::Error::BadHeader","value":"Error::BadHeader","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" A header line that couldn't be parsed. Synthetic error `500`.\n","sig":null,"attributes":[{"value":"/ A header line that couldn't be parsed. Synthetic error `500`.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26690,"byte_end":26755,"line_start":19,"line_end":19,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26841,"byte_end":26843,"line_start":22,"line_end":22,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" Some unspecified `std::io::Error`. Synthetic error `500`.\n","sig":null,"attributes":[{"value":"/ Some unspecified `std::io::Error`. Synthetic error `500`.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26775,"byte_end":26836,"line_start":21,"line_end":21,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26913,"byte_end":26921,"line_start":24,"line_end":24,"column_start":5,"column_end":13},"name":"BadProxy","qualname":"::error::Error::BadProxy","value":"Error::BadProxy","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" Proxy information was not properly formatted\n","sig":null,"attributes":[{"value":"/ Proxy information was not properly formatted","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26860,"byte_end":26908,"line_start":23,"line_end":23,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26981,"byte_end":26994,"line_start":26,"line_end":26,"column_start":5,"column_end":18},"name":"BadProxyCreds","qualname":"::error::Error::BadProxyCreds","value":"Error::BadProxyCreds","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" Proxy credentials were not properly formatted\n","sig":null,"attributes":[{"value":"/ Proxy credentials were not properly formatted","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26927,"byte_end":26976,"line_start":25,"line_end":25,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":27032,"byte_end":27044,"line_start":28,"line_end":28,"column_start":5,"column_end":17},"name":"ProxyConnect","qualname":"::error::Error::ProxyConnect","value":"Error::ProxyConnect","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" Proxy could not connect\n","sig":null,"attributes":[{"value":"/ Proxy could not connect","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":27000,"byte_end":27027,"line_start":27,"line_end":27,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":27090,"byte_end":27107,"line_start":30,"line_end":30,"column_start":5,"column_end":22},"name":"InvalidProxyCreds","qualname":"::error::Error::InvalidProxyCreds","value":"Error::InvalidProxyCreds","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" Incorrect credentials for proxy\n","sig":null,"attributes":[{"value":"/ Incorrect credentials for proxy","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":27050,"byte_end":27085,"line_start":29,"line_end":29,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":27166,"byte_end":27174,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"TlsError","qualname":"::error::Error::TlsError","value":"Error::TlsError(native_tls::Error)","parent":{"krate":0,"index":566},"children":[],"decl_id":null,"docs":" TLS Error\n","sig":null,"attributes":[{"value":"/ TLS Error","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":27113,"byte_end":27126,"line_start":31,"line_end":31,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"native-tls\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":27131,"byte_end":27161,"line_start":32,"line_end":32,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26161,"byte_end":26166,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n\n    /// The url could not be understood. Synthetic error `400`.\n    BadUrl(String),\n\n    /// The url scheme could not be understood. Synthetic error `400`.\n    UnknownScheme(String),\n\n    /// DNS lookup failed. Synthetic error `400`.\n    DnsFailed(String),\n\n    /// Connection to server failed. Synthetic error `500`.\n    ConnectionFailed(String),\n\n    /// Too many redirects. Synthetic error `500`.\n    TooManyRedirects,\n\n    /// A status line we don't understand `HTTP/1.1 200 OK`. Synthetic error `500`.\n    BadStatus,\n\n    /// A header line that couldn't be parsed. Synthetic error `500`.\n    BadHeader,\n\n    /// Some unspecified `std::io::Error`. Synthetic error `500`.\n    Io(io::Error),\n\n    /// Proxy information was not properly formatted\n    BadProxy,\n\n    /// Proxy credentials were not properly formatted\n    BadProxyCreds,\n\n    /// Proxy could not connect\n    ProxyConnect,\n\n    /// Incorrect credentials for proxy\n    InvalidProxyCreds,\n\n    /// TLS Error\n    #[cfg(feature = \"native-tls\")]\n    TlsError(native_tls::Error),\n}","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596}],"decl_id":null,"docs":" Errors that are translated to [\"synthetic\" responses](struct.Response.html#method.synthetic).\n","sig":null,"attributes":[{"value":"/ Errors that are translated to [\"synthetic\" responses](struct.Response.html#method.synthetic).","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":26037,"byte_end":26134,"line_start":4,"line_end":4,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":27614,"byte_end":27620,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"status","qualname":"<Error>::status","value":"pub fn status(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" For synthetic responses, this is the error code.\n","sig":null,"attributes":[{"value":"/ For synthetic responses, this is the error code.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":27550,"byte_end":27602,"line_start":46,"line_end":46,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":28307,"byte_end":28318,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"status_text","qualname":"<Error>::status_text","value":"pub fn status_text(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" For synthetic responses, this is the status text.\n","sig":null,"attributes":[{"value":"/ For synthetic responses, this is the status text.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":28242,"byte_end":28295,"line_start":66,"line_end":66,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":29210,"byte_end":29219,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"body_text","qualname":"<Error>::body_text","value":"pub fn body_text(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" For synthetic responses, this is the body text.\n","sig":null,"attributes":[{"value":"/ For synthetic responses, this is the body text.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":29147,"byte_end":29198,"line_start":86,"line_end":86,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":30730,"byte_end":30736,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Header","qualname":"::header::Header","value":"Header {  }","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603}],"decl_id":null,"docs":" Wrapper type for a header field.\n https://tools.ietf.org/html/rfc7230#section-3.2\n","sig":null,"attributes":[{"value":"/ Wrapper type for a header field.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":30630,"byte_end":30666,"line_start":6,"line_end":6,"column_start":1,"column_end":37}},{"value":"/ https://tools.ietf.org/html/rfc7230#section-3.2","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":30667,"byte_end":30718,"line_start":7,"line_end":7,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31180,"byte_end":31183,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<Header>::new","value":"pub fn new(&str, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31572,"byte_end":31576,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"name","qualname":"<Header>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The header name.","sig":null,"attributes":[{"value":"/ The header name.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31344,"byte_end":31364,"line_start":31,"line_end":31,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31369,"byte_end":31372,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31377,"byte_end":31384,"line_start":33,"line_end":33,"column_start":5,"column_end":12}},{"value":"/ let header = \"X-Forwarded-For: 127.0.0.1\"","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31389,"byte_end":31434,"line_start":34,"line_end":34,"column_start":5,"column_end":50}},{"value":"/     .parse::<ureq::Header>()","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31439,"byte_end":31471,"line_start":35,"line_end":35,"column_start":5,"column_end":37}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31476,"byte_end":31494,"line_start":36,"line_end":36,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(\"X-Forwarded-For\", header.name());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31499,"byte_end":31548,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31553,"byte_end":31560,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31872,"byte_end":31877,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"value","qualname":"<Header>::value","value":"pub fn value(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The header value.","sig":null,"attributes":[{"value":"/ The header value.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31648,"byte_end":31669,"line_start":43,"line_end":43,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31674,"byte_end":31677,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31682,"byte_end":31689,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ let header = \"X-Forwarded-For: 127.0.0.1\"","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31694,"byte_end":31739,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/     .parse::<ureq::Header>()","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31744,"byte_end":31776,"line_start":47,"line_end":47,"column_start":5,"column_end":37}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31781,"byte_end":31799,"line_start":48,"line_end":48,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(\"127.0.0.1\", header.value());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31804,"byte_end":31848,"line_start":49,"line_end":49,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31853,"byte_end":31860,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":32225,"byte_end":32232,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"is_name","qualname":"<Header>::is_name","value":"pub fn is_name(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares the given str to the header name ignoring case.","sig":null,"attributes":[{"value":"/ Compares the given str to the header name ignoring case.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31959,"byte_end":32019,"line_start":55,"line_end":55,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":32024,"byte_end":32027,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":32032,"byte_end":32039,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ let header = \"X-Forwarded-For: 127.0.0.1\"","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":32044,"byte_end":32089,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     .parse::<ureq::Header>()","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":32094,"byte_end":32126,"line_start":59,"line_end":59,"column_start":5,"column_end":37}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":32131,"byte_end":32149,"line_start":60,"line_end":60,"column_start":5,"column_end":23}},{"value":"/ assert!(header.is_name(\"x-forwarded-for\"));","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":32154,"byte_end":32201,"line_start":61,"line_end":61,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":32206,"byte_end":32213,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":49362,"byte_end":49367,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Proxy","qualname":"::proxy::Proxy","value":"Proxy {  }","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658}],"decl_id":null,"docs":" Proxy server definition\n","sig":null,"attributes":[{"value":"/ Proxy server definition","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":49278,"byte_end":49305,"line_start":10,"line_end":10,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":51418,"byte_end":51421,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Proxy>::new","value":"pub fn new<S: AsRef<str>>(S) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a proxy from a format string.\n # Arguments:\n * `proxy` - a str of format `<protocol>://<user>:<password>@<host>:port` . All parts except host are optional.\n # Protocols\n * `http`: HTTP Connect\n * `socks`, `socks5`: SOCKS5 (requires socks feature)\n # Examples\n * `http://127.0.0.1:8080`\n * `socks5://john:smith@socks.google.com`\n * `john:smith@socks.google.com:8000`\n * `localhost`\n","sig":null,"attributes":[{"value":"/ Create a proxy from a format string.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":50945,"byte_end":50985,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/ # Arguments:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":50990,"byte_end":51006,"line_start":65,"line_end":65,"column_start":5,"column_end":21}},{"value":"/ * `proxy` - a str of format `<protocol>://<user>:<password>@<host>:port` . All parts except host are optional.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":51011,"byte_end":51125,"line_start":66,"line_end":66,"column_start":5,"column_end":119}},{"value":"/ # Protocols","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":51130,"byte_end":51145,"line_start":67,"line_end":67,"column_start":5,"column_end":20}},{"value":"/ * `http`: HTTP Connect","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":51150,"byte_end":51176,"line_start":68,"line_end":68,"column_start":5,"column_end":31}},{"value":"/ * `socks`, `socks5`: SOCKS5 (requires socks feature)","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":51181,"byte_end":51237,"line_start":69,"line_end":69,"column_start":5,"column_end":61}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":51242,"byte_end":51256,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/ * `http://127.0.0.1:8080`","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":51261,"byte_end":51290,"line_start":71,"line_end":71,"column_start":5,"column_end":34}},{"value":"/ * `socks5://john:smith@socks.google.com`","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":51295,"byte_end":51339,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ * `john:smith@socks.google.com:8000`","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":51344,"byte_end":51384,"line_start":73,"line_end":73,"column_start":5,"column_end":45}},{"value":"/ * `localhost`","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":51389,"byte_end":51406,"line_start":74,"line_end":74,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":57328,"byte_end":57335,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"Request","qualname":"::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685}],"decl_id":null,"docs":" Request instances are builders that creates a request.","sig":null,"attributes":[{"value":"/ Request instances are builders that creates a request.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":57014,"byte_end":57072,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":57073,"byte_end":57076,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":57077,"byte_end":57084,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ let mut request = ureq::get(\"https://www.google.com/\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":57085,"byte_end":57144,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":57145,"byte_end":57148,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let response = request","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":57149,"byte_end":57175,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/     .query(\"foo\", \"bar baz\") // add ?foo=bar%20baz","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":57176,"byte_end":57230,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/     .call();                 // run the request","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":57231,"byte_end":57282,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":57283,"byte_end":57290,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59181,"byte_end":59186,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"build","qualname":"<Request>::build","value":"pub fn build(&Self) -> Request","parent":null,"children":[],"decl_id":null,"docs":" \"Builds\" this request which is effectively the same as cloning.\n This is needed when we use a chain of request builders, but\n don't want to send the request at the end of the chain.","sig":null,"attributes":[{"value":"/ \"Builds\" this request which is effectively the same as cloning.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":58841,"byte_end":58908,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/ This is needed when we use a chain of request builders, but","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":58913,"byte_end":58976,"line_start":84,"line_end":84,"column_start":5,"column_end":68}},{"value":"/ don't want to send the request at the end of the chain.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":58981,"byte_end":59040,"line_start":85,"line_end":85,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59045,"byte_end":59048,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59053,"byte_end":59060,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ let r = ureq::get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59065,"byte_end":59098,"line_start":88,"line_end":88,"column_start":5,"column_end":38}},{"value":"/     .set(\"X-Foo-Bar\", \"Baz\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59103,"byte_end":59135,"line_start":89,"line_end":89,"column_start":5,"column_end":37}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59140,"byte_end":59157,"line_start":90,"line_end":90,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59162,"byte_end":59169,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59582,"byte_end":59586,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"call","qualname":"<Request>::call","value":"pub fn call(&mut Self) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Executes the request and blocks the caller until done.","sig":null,"attributes":[{"value":"/ Executes the request and blocks the caller until done.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59239,"byte_end":59297,"line_start":96,"line_end":96,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59302,"byte_end":59305,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Use `.timeout_connect()` and `.timeout_read()` to avoid blocking forever.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59310,"byte_end":59387,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59392,"byte_end":59395,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59400,"byte_end":59407,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ let r = ureq::get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59412,"byte_end":59445,"line_start":101,"line_end":101,"column_start":5,"column_end":38}},{"value":"/     .timeout_connect(10_000) // max 10 seconds","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59450,"byte_end":59500,"line_start":102,"line_end":102,"column_start":5,"column_end":55}},{"value":"/     .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59505,"byte_end":59521,"line_start":103,"line_end":103,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59526,"byte_end":59529,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", r);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59534,"byte_end":59558,"line_start":105,"line_end":105,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":59563,"byte_end":59570,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61048,"byte_end":61058,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"send_bytes","qualname":"<Request>::send_bytes","value":"pub fn send_bytes(&mut Self, &[u8]) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Send data as bytes.","sig":null,"attributes":[{"value":"/ Send data as bytes.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":60745,"byte_end":60768,"line_start":145,"line_end":145,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":60773,"byte_end":60776,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The `Content-Length` header is implicitly set to the length of the serialized value.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":60781,"byte_end":60869,"line_start":147,"line_end":147,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":60874,"byte_end":60877,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":60882,"byte_end":60889,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ let body = b\"Hello world!\";","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":60894,"byte_end":60925,"line_start":150,"line_end":150,"column_start":5,"column_end":36}},{"value":"/ let r = ureq::post(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":60930,"byte_end":60964,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/     .send_bytes(body);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":60969,"byte_end":60995,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/ println!(\"{:?}\", r);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61000,"byte_end":61024,"line_start":153,"line_end":153,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61029,"byte_end":61036,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61917,"byte_end":61928,"line_start":180,"line_end":180,"column_start":12,"column_end":23},"name":"send_string","qualname":"<Request>::send_string","value":"pub fn send_string(&mut Self, &str) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Send data as a string.","sig":null,"attributes":[{"value":"/ Send data as a string.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61151,"byte_end":61177,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61182,"byte_end":61185,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The `Content-Length` header is implicitly set to the length of the serialized value.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61190,"byte_end":61278,"line_start":161,"line_end":161,"column_start":5,"column_end":93}},{"value":"/ Defaults to `utf-8`","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61283,"byte_end":61306,"line_start":162,"line_end":162,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61311,"byte_end":61314,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ## Charset support","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61319,"byte_end":61341,"line_start":164,"line_end":164,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61346,"byte_end":61349,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Requires feature `ureq = { version = \"*\", features = [\"charset\"] }`","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61354,"byte_end":61425,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61430,"byte_end":61433,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If a `Content-Type` header is present and it contains a charset specification, we","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61438,"byte_end":61523,"line_start":168,"line_end":168,"column_start":5,"column_end":90}},{"value":"/ attempt to encode the string using that character set. If it fails, we fall back","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61528,"byte_end":61612,"line_start":169,"line_end":169,"column_start":5,"column_end":89}},{"value":"/ on utf-8.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61617,"byte_end":61630,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61635,"byte_end":61638,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61643,"byte_end":61650,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ // this example requires features = [\"charset\"]","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61655,"byte_end":61706,"line_start":173,"line_end":173,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61711,"byte_end":61714,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let r = ureq::post(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61719,"byte_end":61753,"line_start":175,"line_end":175,"column_start":5,"column_end":39}},{"value":"/     .set(\"Content-Type\", \"text/plain; charset=iso-8859-1\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61758,"byte_end":61820,"line_start":176,"line_end":176,"column_start":5,"column_end":67}},{"value":"/     .send_string(\"Hällo Wörld!\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61825,"byte_end":61864,"line_start":177,"line_end":177,"column_start":5,"column_end":42}},{"value":"/ println!(\"{:?}\", r);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61869,"byte_end":61893,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":61898,"byte_end":61905,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62662,"byte_end":62671,"line_start":201,"line_end":201,"column_start":12,"column_end":21},"name":"send_form","qualname":"<Request>::send_form","value":"pub fn send_form(&mut Self, &[(&str, &str)]) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Send a sequence of (key, value) pairs as form-urlencoded data.","sig":null,"attributes":[{"value":"/ Send a sequence of (key, value) pairs as form-urlencoded data.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62147,"byte_end":62213,"line_start":186,"line_end":186,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62218,"byte_end":62221,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ The `Content-Type` header is implicitly set to application/x-www-form-urlencoded.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62226,"byte_end":62311,"line_start":188,"line_end":188,"column_start":5,"column_end":90}},{"value":"/ The `Content-Length` header is implicitly set to the length of the serialized value.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62316,"byte_end":62404,"line_start":189,"line_end":189,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62409,"byte_end":62412,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62417,"byte_end":62424,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62429,"byte_end":62445,"line_start":192,"line_end":192,"column_start":5,"column_end":21}},{"value":"/ extern crate ureq;","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62450,"byte_end":62472,"line_start":193,"line_end":193,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62477,"byte_end":62480,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62485,"byte_end":62500,"line_start":195,"line_end":195,"column_start":5,"column_end":20}},{"value":"/ let r = ureq::post(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62505,"byte_end":62539,"line_start":196,"line_end":196,"column_start":5,"column_end":39}},{"value":"/     .send_form(&[(\"foo\", \"bar\"),(\"foo2\", \"bar2\")]);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62544,"byte_end":62599,"line_start":197,"line_end":197,"column_start":5,"column_end":60}},{"value":"/ println!(\"{:?}\", r);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62604,"byte_end":62628,"line_start":198,"line_end":198,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62633,"byte_end":62638,"line_start":199,"line_end":199,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":62643,"byte_end":62650,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63765,"byte_end":63769,"line_start":229,"line_end":229,"column_start":12,"column_end":16},"name":"send","qualname":"<Request>::send","value":"pub fn send<impl Read: Read>(&mut Self, impl Read) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Send data from a reader.","sig":null,"attributes":[{"value":"/ Send data from a reader.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63052,"byte_end":63080,"line_start":211,"line_end":211,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63085,"byte_end":63088,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ If no Content-Length and Transfer-Encoding header has been set, it uses the [chunked transfer encoding](https://tools.ietf.org/html/rfc7230#section-4.1).","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63093,"byte_end":63250,"line_start":213,"line_end":213,"column_start":5,"column_end":162}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63255,"byte_end":63258,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The caller may set the Content-Length header to the expected byte size of the reader if is","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63263,"byte_end":63357,"line_start":215,"line_end":215,"column_start":5,"column_end":99}},{"value":"/ known.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63362,"byte_end":63372,"line_start":216,"line_end":216,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63377,"byte_end":63380,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The input from the reader is buffered into chunks of size 16,384, the max size of a TLS fragment.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63385,"byte_end":63486,"line_start":218,"line_end":218,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63491,"byte_end":63494,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63499,"byte_end":63506,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ use std::io::Cursor;","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63511,"byte_end":63535,"line_start":221,"line_end":221,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63540,"byte_end":63543,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let read = Cursor::new(vec![0x20; 100_000]);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63548,"byte_end":63596,"line_start":223,"line_end":223,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63601,"byte_end":63604,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ let resp = ureq::post(\"http://localhost/example-upload\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63609,"byte_end":63669,"line_start":225,"line_end":225,"column_start":5,"column_end":65}},{"value":"/     .set(\"Content-Type\", \"text/plain\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63674,"byte_end":63716,"line_start":226,"line_end":226,"column_start":5,"column_end":47}},{"value":"/     .send(read);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63721,"byte_end":63741,"line_start":227,"line_end":227,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63746,"byte_end":63753,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64248,"byte_end":64251,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"set","qualname":"<Request>::set","value":"pub fn set(&mut Self, &str, &str) -> &mut Request","parent":null,"children":[],"decl_id":null,"docs":" Set a header field.","sig":null,"attributes":[{"value":"/ Set a header field.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63881,"byte_end":63904,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63909,"byte_end":63912,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63917,"byte_end":63924,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ let r = ureq::get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63929,"byte_end":63962,"line_start":236,"line_end":236,"column_start":5,"column_end":38}},{"value":"/     .set(\"X-API-Key\", \"foobar\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":63967,"byte_end":64002,"line_start":237,"line_end":237,"column_start":5,"column_end":40}},{"value":"/     .set(\"Accept\", \"text/plain\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64007,"byte_end":64043,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/     .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64048,"byte_end":64064,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64069,"byte_end":64072,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/  if r.ok() {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64077,"byte_end":64093,"line_start":241,"line_end":241,"column_start":5,"column_end":21}},{"value":"/      println!(\"yay got {}\", r.into_string().unwrap());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64098,"byte_end":64156,"line_start":242,"line_end":242,"column_start":5,"column_end":63}},{"value":"/  } else {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64161,"byte_end":64174,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/      println!(\"Oh no error!\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64179,"byte_end":64213,"line_start":244,"line_end":244,"column_start":5,"column_end":39}},{"value":"/  }","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64218,"byte_end":64224,"line_start":245,"line_end":245,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64229,"byte_end":64236,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64656,"byte_end":64662,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"header","qualname":"<Request>::header","value":"pub fn header(&Self, &str) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value for a set header.","sig":null,"attributes":[{"value":"/ Returns the value for a set header.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64407,"byte_end":64446,"line_start":252,"line_end":252,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64451,"byte_end":64454,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64459,"byte_end":64466,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ let req = ureq::get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64471,"byte_end":64506,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/     .set(\"X-API-Key\", \"foobar\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64511,"byte_end":64546,"line_start":256,"line_end":256,"column_start":5,"column_end":40}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64551,"byte_end":64568,"line_start":257,"line_end":257,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(\"foobar\", req.header(\"x-api-Key\").unwrap());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64573,"byte_end":64632,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64637,"byte_end":64644,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65110,"byte_end":65122,"line_start":273,"line_end":273,"column_start":12,"column_end":24},"name":"header_names","qualname":"<Request>::header_names","value":"pub fn header_names(&Self) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" A list of the set header names in this request. Lowercased to be uniform.","sig":null,"attributes":[{"value":"/ A list of the set header names in this request. Lowercased to be uniform.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64759,"byte_end":64836,"line_start":264,"line_end":264,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64841,"byte_end":64844,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64849,"byte_end":64856,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ let req = ureq::get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64861,"byte_end":64896,"line_start":267,"line_end":267,"column_start":5,"column_end":40}},{"value":"/     .set(\"X-API-Key\", \"foobar\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64901,"byte_end":64936,"line_start":268,"line_end":268,"column_start":5,"column_end":40}},{"value":"/     .set(\"Content-Type\", \"application/json\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64941,"byte_end":64989,"line_start":269,"line_end":269,"column_start":5,"column_end":53}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":64994,"byte_end":65011,"line_start":270,"line_end":270,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(req.header_names(), vec![\"x-api-key\", \"content-type\"]);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65016,"byte_end":65086,"line_start":271,"line_end":271,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65091,"byte_end":65098,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65505,"byte_end":65508,"line_start":288,"line_end":288,"column_start":12,"column_end":15},"name":"has","qualname":"<Request>::has","value":"pub fn has(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tells if the header has been set.","sig":null,"attributes":[{"value":"/ Tells if the header has been set.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65274,"byte_end":65311,"line_start":280,"line_end":280,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65316,"byte_end":65319,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65324,"byte_end":65331,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ let req = ureq::get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65336,"byte_end":65371,"line_start":283,"line_end":283,"column_start":5,"column_end":40}},{"value":"/     .set(\"X-API-Key\", \"foobar\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65376,"byte_end":65411,"line_start":284,"line_end":284,"column_start":5,"column_end":40}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65416,"byte_end":65433,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(true, req.has(\"x-api-Key\"));","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65438,"byte_end":65481,"line_start":286,"line_end":286,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65486,"byte_end":65493,"line_start":287,"line_end":287,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65980,"byte_end":65983,"line_start":304,"line_end":304,"column_start":12,"column_end":15},"name":"all","qualname":"<Request>::all","value":"pub fn all(&Self, &str) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" All headers corresponding values for the give name, or empty vector.","sig":null,"attributes":[{"value":"/ All headers corresponding values for the give name, or empty vector.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65597,"byte_end":65669,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65674,"byte_end":65677,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65682,"byte_end":65689,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ let req = ureq::get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65694,"byte_end":65729,"line_start":295,"line_end":295,"column_start":5,"column_end":40}},{"value":"/     .set(\"X-Forwarded-For\", \"1.2.3.4\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65734,"byte_end":65776,"line_start":296,"line_end":296,"column_start":5,"column_end":47}},{"value":"/     .set(\"X-Forwarded-For\", \"2.3.4.5\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65781,"byte_end":65823,"line_start":297,"line_end":297,"column_start":5,"column_end":47}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65828,"byte_end":65845,"line_start":298,"line_end":298,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(req.all(\"x-forwarded-for\"), vec![","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65850,"byte_end":65898,"line_start":299,"line_end":299,"column_start":5,"column_end":53}},{"value":"/     \"1.2.3.4\",","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65903,"byte_end":65921,"line_start":300,"line_end":300,"column_start":5,"column_end":23}},{"value":"/     \"2.3.4.5\",","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65926,"byte_end":65944,"line_start":301,"line_end":301,"column_start":5,"column_end":23}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65949,"byte_end":65956,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":65961,"byte_end":65968,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66385,"byte_end":66390,"line_start":320,"line_end":320,"column_start":12,"column_end":17},"name":"query","qualname":"<Request>::query","value":"pub fn query(&mut Self, &str, &str) -> &mut Request","parent":null,"children":[],"decl_id":null,"docs":" Set a query parameter.","sig":null,"attributes":[{"value":"/ Set a query parameter.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66082,"byte_end":66108,"line_start":308,"line_end":308,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66113,"byte_end":66116,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ For example, to set `?format=json&dest=/login`","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66121,"byte_end":66171,"line_start":310,"line_end":310,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66176,"byte_end":66179,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66184,"byte_end":66191,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ let r = ureq::get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66196,"byte_end":66229,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/     .query(\"format\", \"json\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66234,"byte_end":66266,"line_start":314,"line_end":314,"column_start":5,"column_end":37}},{"value":"/     .query(\"dest\", \"/login\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66271,"byte_end":66303,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/     .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66308,"byte_end":66324,"line_start":316,"line_end":316,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66329,"byte_end":66332,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", r);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66337,"byte_end":66361,"line_start":318,"line_end":318,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66366,"byte_end":66373,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66798,"byte_end":66807,"line_start":335,"line_end":335,"column_start":12,"column_end":21},"name":"query_str","qualname":"<Request>::query_str","value":"pub fn query_str(&mut Self, &str) -> &mut Request","parent":null,"children":[],"decl_id":null,"docs":" Set query parameters as a string.","sig":null,"attributes":[{"value":"/ Set query parameters as a string.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66515,"byte_end":66552,"line_start":325,"line_end":325,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66557,"byte_end":66560,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ For example, to set `?format=json&dest=/login`","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66565,"byte_end":66615,"line_start":327,"line_end":327,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66620,"byte_end":66623,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66628,"byte_end":66635,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ let r = ureq::get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66640,"byte_end":66673,"line_start":330,"line_end":330,"column_start":5,"column_end":38}},{"value":"/     .query_str(\"?format=json&dest=/login\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66678,"byte_end":66724,"line_start":331,"line_end":331,"column_start":5,"column_end":51}},{"value":"/     .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66729,"byte_end":66745,"line_start":332,"line_end":332,"column_start":5,"column_end":21}},{"value":"/ println!(\"{:?}\", r);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66750,"byte_end":66774,"line_start":333,"line_end":333,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66779,"byte_end":66786,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67336,"byte_end":67351,"line_start":352,"line_end":352,"column_start":12,"column_end":27},"name":"timeout_connect","qualname":"<Request>::timeout_connect","value":"pub fn timeout_connect(&mut Self, u64) -> &mut Request","parent":null,"children":[],"decl_id":null,"docs":" Timeout for the socket connection to be successful.\n If both this and .timeout() are both set, .timeout_connect()\n takes precedence.","sig":null,"attributes":[{"value":"/ Timeout for the socket connection to be successful.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66909,"byte_end":66964,"line_start":340,"line_end":340,"column_start":5,"column_end":60}},{"value":"/ If both this and .timeout() are both set, .timeout_connect()","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":66969,"byte_end":67033,"line_start":341,"line_end":341,"column_start":5,"column_end":69}},{"value":"/ takes precedence.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67038,"byte_end":67059,"line_start":342,"line_end":342,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67064,"byte_end":67067,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ The default is `0`, which means a request can block forever.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67072,"byte_end":67136,"line_start":344,"line_end":344,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67141,"byte_end":67144,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67149,"byte_end":67156,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ let r = ureq::get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67161,"byte_end":67194,"line_start":347,"line_end":347,"column_start":5,"column_end":38}},{"value":"/     .timeout_connect(1_000) // wait max 1 second to connect","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67199,"byte_end":67262,"line_start":348,"line_end":348,"column_start":5,"column_end":68}},{"value":"/     .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67267,"byte_end":67283,"line_start":349,"line_end":349,"column_start":5,"column_end":21}},{"value":"/ println!(\"{:?}\", r);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67288,"byte_end":67312,"line_start":350,"line_end":350,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67317,"byte_end":67324,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67864,"byte_end":67876,"line_start":369,"line_end":369,"column_start":12,"column_end":24},"name":"timeout_read","qualname":"<Request>::timeout_read","value":"pub fn timeout_read(&mut Self, u64) -> &mut Request","parent":null,"children":[],"decl_id":null,"docs":" Timeout for the individual reads of the socket.\n If both this and .timeout() are both set, .timeout()\n takes precedence.","sig":null,"attributes":[{"value":"/ Timeout for the individual reads of the socket.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67457,"byte_end":67508,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/ If both this and .timeout() are both set, .timeout()","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67513,"byte_end":67569,"line_start":358,"line_end":358,"column_start":5,"column_end":61}},{"value":"/ takes precedence.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67574,"byte_end":67595,"line_start":359,"line_end":359,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67600,"byte_end":67603,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ The default is `0`, which means it can block forever.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67608,"byte_end":67665,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67670,"byte_end":67673,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67678,"byte_end":67685,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ let r = ureq::get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67690,"byte_end":67723,"line_start":364,"line_end":364,"column_start":5,"column_end":38}},{"value":"/     .timeout_read(1_000) // wait max 1 second for the read","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67728,"byte_end":67790,"line_start":365,"line_end":365,"column_start":5,"column_end":67}},{"value":"/     .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67795,"byte_end":67811,"line_start":366,"line_end":366,"column_start":5,"column_end":21}},{"value":"/ println!(\"{:?}\", r);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67816,"byte_end":67840,"line_start":367,"line_end":367,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":67845,"byte_end":67852,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68499,"byte_end":68512,"line_start":389,"line_end":389,"column_start":12,"column_end":25},"name":"timeout_write","qualname":"<Request>::timeout_write","value":"pub fn timeout_write(&mut Self, u64) -> &mut Request","parent":null,"children":[],"decl_id":null,"docs":" Timeout for the individual writes to the socket.\n If both this and .timeout() are both set, .timeout()\n takes precedence.","sig":null,"attributes":[{"value":"/ Timeout for the individual writes to the socket.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68088,"byte_end":68140,"line_start":377,"line_end":377,"column_start":5,"column_end":57}},{"value":"/ If both this and .timeout() are both set, .timeout()","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68145,"byte_end":68201,"line_start":378,"line_end":378,"column_start":5,"column_end":61}},{"value":"/ takes precedence.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68206,"byte_end":68227,"line_start":379,"line_end":379,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68232,"byte_end":68235,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The default is `0`, which means it can block forever.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68240,"byte_end":68297,"line_start":381,"line_end":381,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68302,"byte_end":68305,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68310,"byte_end":68317,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ let r = ureq::get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68322,"byte_end":68355,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/     .timeout_write(1_000)   // wait max 1 second for sending.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68360,"byte_end":68425,"line_start":385,"line_end":385,"column_start":5,"column_end":70}},{"value":"/     .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68430,"byte_end":68446,"line_start":386,"line_end":386,"column_start":5,"column_end":21}},{"value":"/ println!(\"{:?}\", r);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68451,"byte_end":68475,"line_start":387,"line_end":387,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68480,"byte_end":68487,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69370,"byte_end":69377,"line_start":412,"line_end":412,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Request>::timeout","value":"pub fn timeout(&mut Self, time::Duration) -> &mut Request","parent":null,"children":[],"decl_id":null,"docs":" Timeout for the overall request, including DNS resolution, connection\n time, redirects, and reading the response body. Slow DNS resolution\n may cause a request to exceed the timeout, because the DNS request\n cannot be interrupted with the available APIs.","sig":null,"attributes":[{"value":"/ Timeout for the overall request, including DNS resolution, connection","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68726,"byte_end":68799,"line_start":397,"line_end":397,"column_start":5,"column_end":78}},{"value":"/ time, redirects, and reading the response body. Slow DNS resolution","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68804,"byte_end":68875,"line_start":398,"line_end":398,"column_start":5,"column_end":76}},{"value":"/ may cause a request to exceed the timeout, because the DNS request","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68880,"byte_end":68950,"line_start":399,"line_end":399,"column_start":5,"column_end":75}},{"value":"/ cannot be interrupted with the available APIs.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":68955,"byte_end":69005,"line_start":400,"line_end":400,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69010,"byte_end":69013,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This takes precedence over .timeout_read() and .timeout_write(), but","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69018,"byte_end":69090,"line_start":402,"line_end":402,"column_start":5,"column_end":77}},{"value":"/ not .timeout_connect().","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69095,"byte_end":69122,"line_start":403,"line_end":403,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69127,"byte_end":69130,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69135,"byte_end":69142,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ // wait max 1 second for whole request to complete.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69147,"byte_end":69202,"line_start":406,"line_end":406,"column_start":5,"column_end":60}},{"value":"/ let r = ureq::get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69207,"byte_end":69240,"line_start":407,"line_end":407,"column_start":5,"column_end":38}},{"value":"/     .timeout(std::time::Duration::from_secs(1))","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69245,"byte_end":69296,"line_start":408,"line_end":408,"column_start":5,"column_end":56}},{"value":"/     .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69301,"byte_end":69317,"line_start":409,"line_end":409,"column_start":5,"column_end":21}},{"value":"/ println!(\"{:?}\", r);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69322,"byte_end":69346,"line_start":410,"line_end":410,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69351,"byte_end":69358,"line_start":411,"line_end":411,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69862,"byte_end":69866,"line_start":430,"line_end":430,"column_start":12,"column_end":16},"name":"auth","qualname":"<Request>::auth","value":"pub fn auth(&mut Self, &str, &str) -> &mut Request","parent":null,"children":[],"decl_id":null,"docs":" Basic auth.","sig":null,"attributes":[{"value":"/ Basic auth.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69494,"byte_end":69509,"line_start":417,"line_end":417,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69514,"byte_end":69517,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ These are the same","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69522,"byte_end":69544,"line_start":419,"line_end":419,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69549,"byte_end":69552,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69557,"byte_end":69564,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ let r1 = ureq::get(\"http://localhost/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69569,"byte_end":69619,"line_start":422,"line_end":422,"column_start":5,"column_end":55}},{"value":"/     .auth(\"martin\", \"rubbermashgum\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69624,"byte_end":69664,"line_start":423,"line_end":423,"column_start":5,"column_end":45}},{"value":"/     .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69669,"byte_end":69685,"line_start":424,"line_end":424,"column_start":5,"column_end":21}},{"value":"/  println!(\"{:?}\", r1);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69690,"byte_end":69716,"line_start":425,"line_end":425,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69721,"byte_end":69724,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ let r2 = ureq::get(\"http://martin:rubbermashgum@localhost/my_page\").call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69729,"byte_end":69808,"line_start":427,"line_end":427,"column_start":5,"column_end":84}},{"value":"/ println!(\"{:?}\", r2);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69813,"byte_end":69838,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":69843,"byte_end":69850,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70264,"byte_end":70273,"line_start":443,"line_end":443,"column_start":12,"column_end":21},"name":"auth_kind","qualname":"<Request>::auth_kind","value":"pub fn auth_kind(&mut Self, &str, &str) -> &mut Request","parent":null,"children":[],"decl_id":null,"docs":" Auth of other kinds such as `Digest`, `Token` etc.","sig":null,"attributes":[{"value":"/ Auth of other kinds such as `Digest`, `Token` etc.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70020,"byte_end":70074,"line_start":435,"line_end":435,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70079,"byte_end":70082,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70087,"byte_end":70094,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/ let r = ureq::get(\"http://localhost/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70099,"byte_end":70148,"line_start":438,"line_end":438,"column_start":5,"column_end":54}},{"value":"/     .auth_kind(\"token\", \"secret\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70153,"byte_end":70190,"line_start":439,"line_end":439,"column_start":5,"column_end":42}},{"value":"/     .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70195,"byte_end":70211,"line_start":440,"line_end":440,"column_start":5,"column_end":21}},{"value":"/ println!(\"{:?}\", r);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70216,"byte_end":70240,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70245,"byte_end":70252,"line_start":442,"line_end":442,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70889,"byte_end":70898,"line_start":463,"line_end":463,"column_start":12,"column_end":21},"name":"redirects","qualname":"<Request>::redirects","value":"pub fn redirects(&mut Self, u32) -> &mut Request","parent":null,"children":[],"decl_id":null,"docs":" How many redirects to follow.","sig":null,"attributes":[{"value":"/ How many redirects to follow.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70444,"byte_end":70477,"line_start":449,"line_end":449,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70482,"byte_end":70485,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Defaults to `5`. Set to `0` to avoid redirects and instead","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70490,"byte_end":70552,"line_start":451,"line_end":451,"column_start":5,"column_end":67}},{"value":"/ get a response object with the 3xx status code.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70557,"byte_end":70608,"line_start":452,"line_end":452,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70613,"byte_end":70616,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ If the redirect count hits this limit (and it's > 0), a synthetic 500 error","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70621,"byte_end":70700,"line_start":454,"line_end":454,"column_start":5,"column_end":84}},{"value":"/ response is produced.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70705,"byte_end":70730,"line_start":455,"line_end":455,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70735,"byte_end":70738,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70743,"byte_end":70750,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ let r = ureq::get(\"/my_page\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70755,"byte_end":70788,"line_start":458,"line_end":458,"column_start":5,"column_end":38}},{"value":"/     .redirects(10)","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70793,"byte_end":70815,"line_start":459,"line_end":459,"column_start":5,"column_end":27}},{"value":"/     .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70820,"byte_end":70836,"line_start":460,"line_end":460,"column_start":5,"column_end":21}},{"value":"/ println!(\"{:?}\", r);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70841,"byte_end":70865,"line_start":461,"line_end":461,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70870,"byte_end":70877,"line_start":462,"line_end":462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71201,"byte_end":71211,"line_start":476,"line_end":476,"column_start":12,"column_end":22},"name":"get_method","qualname":"<Request>::get_method","value":"pub fn get_method(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the method this request is using.","sig":null,"attributes":[{"value":"/ Get the method this request is using.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":70988,"byte_end":71029,"line_start":468,"line_end":468,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71034,"byte_end":71037,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71042,"byte_end":71054,"line_start":470,"line_end":470,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71059,"byte_end":71066,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ let req = ureq::post(\"/somewhere\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71071,"byte_end":71109,"line_start":472,"line_end":472,"column_start":5,"column_end":43}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71114,"byte_end":71131,"line_start":473,"line_end":473,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(req.get_method(), \"POST\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71136,"byte_end":71177,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71182,"byte_end":71189,"line_start":475,"line_end":475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71636,"byte_end":71643,"line_start":491,"line_end":491,"column_start":12,"column_end":19},"name":"get_url","qualname":"<Request>::get_url","value":"pub fn get_url(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the url this request was created with.","sig":null,"attributes":[{"value":"/ Get the url this request was created with.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71261,"byte_end":71307,"line_start":480,"line_end":480,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71312,"byte_end":71315,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ This value is not normalized, it is exactly as set.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71320,"byte_end":71375,"line_start":482,"line_end":482,"column_start":5,"column_end":60}},{"value":"/ It does not contain any added query parameters.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71380,"byte_end":71431,"line_start":483,"line_end":483,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71436,"byte_end":71439,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71444,"byte_end":71456,"line_start":485,"line_end":485,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71461,"byte_end":71468,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ let req = ureq::post(\"https://cool.server/innit\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71473,"byte_end":71526,"line_start":487,"line_end":487,"column_start":5,"column_end":58}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71531,"byte_end":71548,"line_start":488,"line_end":488,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(req.get_url(), \"https://cool.server/innit\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71553,"byte_end":71612,"line_start":489,"line_end":489,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71617,"byte_end":71624,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72113,"byte_end":72121,"line_start":507,"line_end":507,"column_start":12,"column_end":20},"name":"get_host","qualname":"<Request>::get_host","value":"pub fn get_host(&Self) -> Result<String, Error>","parent":null,"children":[],"decl_id":null,"docs":" Normalizes and returns the host that will be used for this request.","sig":null,"attributes":[{"value":"/ Normalizes and returns the host that will be used for this request.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71690,"byte_end":71761,"line_start":495,"line_end":495,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71766,"byte_end":71769,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71774,"byte_end":71786,"line_start":497,"line_end":497,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71791,"byte_end":71798,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ let req1 = ureq::post(\"https://cool.server/innit\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71803,"byte_end":71857,"line_start":499,"line_end":499,"column_start":5,"column_end":59}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71862,"byte_end":71879,"line_start":500,"line_end":500,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(req1.get_host().unwrap(), \"cool.server\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71884,"byte_end":71940,"line_start":501,"line_end":501,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71945,"byte_end":71948,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let req2 = ureq::post(\"http://localhost/some/path\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":71953,"byte_end":72008,"line_start":503,"line_end":503,"column_start":5,"column_end":60}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72013,"byte_end":72030,"line_start":504,"line_end":504,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(req2.get_host().unwrap(), \"localhost\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72035,"byte_end":72089,"line_start":505,"line_end":505,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72094,"byte_end":72101,"line_start":506,"line_end":506,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72656,"byte_end":72666,"line_start":525,"line_end":525,"column_start":12,"column_end":22},"name":"get_scheme","qualname":"<Request>::get_scheme","value":"pub fn get_scheme(&Self) -> Result<String, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the scheme for this request.","sig":null,"attributes":[{"value":"/ Returns the scheme for this request.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72419,"byte_end":72459,"line_start":517,"line_end":517,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72464,"byte_end":72467,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72472,"byte_end":72484,"line_start":519,"line_end":519,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72489,"byte_end":72496,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ let req = ureq::post(\"https://cool.server/innit\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72501,"byte_end":72554,"line_start":521,"line_end":521,"column_start":5,"column_end":58}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72559,"byte_end":72576,"line_start":522,"line_end":522,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(req.get_scheme().unwrap(), \"https\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72581,"byte_end":72632,"line_start":523,"line_end":523,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72637,"byte_end":72644,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73062,"byte_end":73071,"line_start":538,"line_end":538,"column_start":12,"column_end":21},"name":"get_query","qualname":"<Request>::get_query","value":"pub fn get_query(&Self) -> Result<String, Error>","parent":null,"children":[],"decl_id":null,"docs":" The complete query for this request.","sig":null,"attributes":[{"value":"/ The complete query for this request.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72766,"byte_end":72806,"line_start":529,"line_end":529,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72811,"byte_end":72814,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72819,"byte_end":72831,"line_start":531,"line_end":531,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72836,"byte_end":72843,"line_start":532,"line_end":532,"column_start":5,"column_end":12}},{"value":"/ let req = ureq::post(\"https://cool.server/innit?foo=bar\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72848,"byte_end":72909,"line_start":533,"line_end":533,"column_start":5,"column_end":66}},{"value":"/     .query(\"format\", \"json\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72914,"byte_end":72946,"line_start":534,"line_end":534,"column_start":5,"column_end":37}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72951,"byte_end":72968,"line_start":535,"line_end":535,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(req.get_query().unwrap(), \"?foo=bar&format=json\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":72973,"byte_end":73038,"line_start":536,"line_end":536,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73043,"byte_end":73050,"line_start":537,"line_end":537,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73439,"byte_end":73447,"line_start":551,"line_end":551,"column_start":12,"column_end":20},"name":"get_path","qualname":"<Request>::get_path","value":"pub fn get_path(&Self) -> Result<String, Error>","parent":null,"children":[],"decl_id":null,"docs":" The normalized url of this request.","sig":null,"attributes":[{"value":"/ The normalized url of this request.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73204,"byte_end":73243,"line_start":543,"line_end":543,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73248,"byte_end":73251,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73256,"byte_end":73268,"line_start":545,"line_end":545,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73273,"byte_end":73280,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/ let req = ureq::post(\"https://cool.server/innit\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73285,"byte_end":73338,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73343,"byte_end":73360,"line_start":548,"line_end":548,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(req.get_path().unwrap(), \"/innit\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73365,"byte_end":73415,"line_start":549,"line_end":549,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73420,"byte_end":73427,"line_start":550,"line_end":550,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73968,"byte_end":73977,"line_start":568,"line_end":568,"column_start":12,"column_end":21},"name":"set_proxy","qualname":"<Request>::set_proxy","value":"pub fn set_proxy(&mut Self, Proxy) -> &mut Request","parent":null,"children":[],"decl_id":null,"docs":" Set the proxy server to use for the connection.","sig":null,"attributes":[{"value":"/ Set the proxy server to use for the connection.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73672,"byte_end":73723,"line_start":559,"line_end":559,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73728,"byte_end":73731,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73736,"byte_end":73748,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73753,"byte_end":73760,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ let proxy = ureq::Proxy::new(\"user:password@cool.proxy:9090\").unwrap();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73765,"byte_end":73840,"line_start":563,"line_end":563,"column_start":5,"column_end":80}},{"value":"/ let req = ureq::post(\"https://cool.server\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73845,"byte_end":73892,"line_start":564,"line_end":564,"column_start":5,"column_end":52}},{"value":"/     .set_proxy(proxy)","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73897,"byte_end":73922,"line_start":565,"line_end":565,"column_start":5,"column_end":30}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73927,"byte_end":73944,"line_start":566,"line_end":566,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":73949,"byte_end":73956,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":75419,"byte_end":75436,"line_start":608,"line_end":608,"column_start":12,"column_end":29},"name":"set_tls_connector","qualname":"<Request>::set_tls_connector","value":"pub fn set_tls_connector(&mut Self, Arc<native_tls::TlsConnector>)\n-> &mut Request","parent":null,"children":[],"decl_id":null,"docs":" Sets the TLS connector that will be used for the connection.","sig":null,"attributes":[{"value":"/ Sets the TLS connector that will be used for the connection.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":75034,"byte_end":75098,"line_start":599,"line_end":599,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":75103,"byte_end":75106,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":75111,"byte_end":75123,"line_start":601,"line_end":601,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":75128,"byte_end":75135,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/ let tls_connector = std::sync::Arc::new(native_tls::TlsConnector::new().unwrap());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":75140,"byte_end":75226,"line_start":603,"line_end":603,"column_start":5,"column_end":91}},{"value":"/ let req = ureq::post(\"https://cool.server\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":75231,"byte_end":75278,"line_start":604,"line_end":604,"column_start":5,"column_end":52}},{"value":"/     .set_tls_connector(tls_connector.clone());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":75283,"byte_end":75333,"line_start":605,"line_end":605,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":75338,"byte_end":75345,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"native-tls\", not(feature = \"tls\")))","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":75350,"byte_end":75407,"line_start":607,"line_end":607,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":77714,"byte_end":77722,"line_start":6,"line_end":6,"column_start":11,"column_end":19},"name":"Resolver","qualname":"::resolve::Resolver","value":"Resolver: Send + Sync","parent":null,"children":[{"krate":0,"index":276}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":77745,"byte_end":77752,"line_start":7,"line_end":7,"column_start":8,"column_end":15},"name":"resolve","qualname":"::resolve::Resolver::resolve","value":"pub fn resolve(&Self, &str) -> IoResult<Vec<SocketAddr>>","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80511,"byte_end":80519,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"Response","qualname":"::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319}],"decl_id":null,"docs":" Response instances are created as results of firing off requests.","sig":null,"attributes":[{"value":"/ Response instances are created as results of firing off requests.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":79393,"byte_end":79462,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":79463,"byte_end":79466,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The `Response` is used to read response headers and decide what to do with the body.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":79467,"byte_end":79555,"line_start":26,"line_end":26,"column_start":1,"column_end":89}},{"value":"/ Note that the socket connection is open and the body not read until one of","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":79556,"byte_end":79634,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ [`into_reader()`](#method.into_reader), [`into_json()`](#method.into_json),","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":79635,"byte_end":79714,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ [`into_json_deserialize()`](#method.into_json_deserialize) or","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":79715,"byte_end":79780,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/ [`into_string()`](#method.into_string) consumes the response.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":79781,"byte_end":79846,"line_start":30,"line_end":30,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":79847,"byte_end":79850,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ All error handling, including URL parse errors and connection errors, is done by mapping onto","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":79851,"byte_end":79948,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ [synthetic errors](#method.synthetic). Callers must check response.synthetic_error(),","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":79949,"byte_end":80038,"line_start":33,"line_end":33,"column_start":1,"column_end":90}},{"value":"/ response.is_ok(), or response.error() before relying on the contents of the reader.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80039,"byte_end":80126,"line_start":34,"line_end":34,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80127,"byte_end":80130,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80131,"byte_end":80138,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ let response = ureq::get(\"https://www.google.com\").call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80139,"byte_end":80201,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/ if let Some(error) = response.synthetic_error() {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80202,"byte_end":80255,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/     eprintln!(\"{}\", error);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80256,"byte_end":80287,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/     return;","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80288,"byte_end":80303,"line_start":40,"line_end":40,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80304,"byte_end":80309,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80310,"byte_end":80313,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // socket is still open and the response body has not been read.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80314,"byte_end":80382,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80383,"byte_end":80386,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let text = response.into_string().unwrap();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80387,"byte_end":80434,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80435,"byte_end":80438,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // response is consumed, and body has been read.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80439,"byte_end":80491,"line_start":47,"line_end":47,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80492,"byte_end":80499,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81518,"byte_end":81521,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"new","qualname":"<Response>::new","value":"pub fn new(u16, &str, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a response with a status, status text and a string body.","sig":null,"attributes":[{"value":"/ Construct a response with a status, status text and a string body.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81186,"byte_end":81256,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81261,"byte_end":81264,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This is hopefully useful for unit tests.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81269,"byte_end":81313,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81318,"byte_end":81321,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81326,"byte_end":81338,"line_start":83,"line_end":83,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81343,"byte_end":81346,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81351,"byte_end":81358,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ let resp = ureq::Response::new(401, \"Authorization Required\", \"Please log in\");","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81363,"byte_end":81446,"line_start":86,"line_end":86,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81451,"byte_end":81454,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(resp.status(), 401);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81459,"byte_end":81494,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81499,"byte_end":81506,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81890,"byte_end":81897,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_url","qualname":"<Response>::get_url","value":"pub fn get_url(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The URL we ended up at. This can differ from the request url when\n we have followed redirects.\n","sig":null,"attributes":[{"value":"/ The URL we ended up at. This can differ from the request url when","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81773,"byte_end":81842,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/ we have followed redirects.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81847,"byte_end":81878,"line_start":98,"line_end":98,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":82044,"byte_end":82055,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"status_line","qualname":"<Response>::status_line","value":"pub fn status_line(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The entire status line like: `HTTP/1.1 200 OK`\n","sig":null,"attributes":[{"value":"/ The entire status line like: `HTTP/1.1 200 OK`","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81982,"byte_end":82032,"line_start":103,"line_end":103,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":82162,"byte_end":82174,"line_start":109,"line_end":109,"column_start":12,"column_end":24},"name":"http_version","qualname":"<Response>::http_version","value":"pub fn http_version(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The http version: `HTTP/1.1`\n","sig":null,"attributes":[{"value":"/ The http version: `HTTP/1.1`","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":82118,"byte_end":82150,"line_start":108,"line_end":108,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":82308,"byte_end":82314,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"status","qualname":"<Response>::status","value":"pub fn status(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The status as a u16: `200`\n","sig":null,"attributes":[{"value":"/ The status as a u16: `200`","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":82266,"byte_end":82296,"line_start":113,"line_end":113,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":82399,"byte_end":82410,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"status_text","qualname":"<Response>::status_text","value":"pub fn status_text(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The status text: `OK`\n","sig":null,"attributes":[{"value":"/ The status text: `OK`","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":82362,"byte_end":82387,"line_start":118,"line_end":118,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":82593,"byte_end":82599,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"header","qualname":"<Response>::header","value":"pub fn header(&Self, &str) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" The header corresponding header value for the give name, if any.\n","sig":null,"attributes":[{"value":"/ The header corresponding header value for the give name, if any.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":82513,"byte_end":82581,"line_start":123,"line_end":123,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":82854,"byte_end":82867,"line_start":133,"line_end":133,"column_start":12,"column_end":25},"name":"headers_names","qualname":"<Response>::headers_names","value":"pub fn headers_names(&Self) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" A list of the header names in this response.\n Lowercased to be uniform.\n","sig":null,"attributes":[{"value":"/ A list of the header names in this response.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":82760,"byte_end":82808,"line_start":131,"line_end":131,"column_start":5,"column_end":53}},{"value":"/ Lowercased to be uniform.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":82813,"byte_end":82842,"line_start":132,"line_end":132,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":83072,"byte_end":83075,"line_start":141,"line_end":141,"column_start":12,"column_end":15},"name":"has","qualname":"<Response>::has","value":"pub fn has(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tells if the response has the named header.\n","sig":null,"attributes":[{"value":"/ Tells if the response has the named header.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":83013,"byte_end":83060,"line_start":140,"line_end":140,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":83236,"byte_end":83239,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"all","qualname":"<Response>::all","value":"pub fn all(&Self, &str) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" All headers corresponding values for the give name, or empty vector.\n","sig":null,"attributes":[{"value":"/ All headers corresponding values for the give name, or empty vector.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":83152,"byte_end":83224,"line_start":145,"line_end":145,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":83490,"byte_end":83492,"line_start":155,"line_end":155,"column_start":12,"column_end":14},"name":"ok","qualname":"<Response>::ok","value":"pub fn ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the response status is: 200 <= status <= 299\n","sig":null,"attributes":[{"value":"/ Whether the response status is: 200 <= status <= 299","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":83422,"byte_end":83478,"line_start":154,"line_end":154,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":83577,"byte_end":83585,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"redirect","qualname":"<Response>::redirect","value":"pub fn redirect(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":83731,"byte_end":83743,"line_start":164,"line_end":164,"column_start":12,"column_end":24},"name":"client_error","qualname":"<Response>::client_error","value":"pub fn client_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the response status is: 400 <= status <= 499\n","sig":null,"attributes":[{"value":"/ Whether the response status is: 400 <= status <= 499","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":83663,"byte_end":83719,"line_start":163,"line_end":163,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":83889,"byte_end":83901,"line_start":169,"line_end":169,"column_start":12,"column_end":24},"name":"server_error","qualname":"<Response>::server_error","value":"pub fn server_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the response status is: 500 <= status <= 599\n","sig":null,"attributes":[{"value":"/ Whether the response status is: 500 <= status <= 599","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":83821,"byte_end":83877,"line_start":168,"line_end":168,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84047,"byte_end":84052,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"error","qualname":"<Response>::error","value":"pub fn error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the response status is: 400 <= status <= 599\n","sig":null,"attributes":[{"value":"/ Whether the response status is: 400 <= status <= 599","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":83979,"byte_end":84035,"line_start":173,"line_end":173,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85675,"byte_end":85684,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"synthetic","qualname":"<Response>::synthetic","value":"pub fn synthetic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tells if this response is \"synthetic\".","sig":null,"attributes":[{"value":"/ Tells if this response is \"synthetic\".","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84132,"byte_end":84174,"line_start":178,"line_end":178,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84179,"byte_end":84182,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The [methods](struct.Request.html#method.call) [firing](struct.Request.html#method.send)","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84187,"byte_end":84279,"line_start":180,"line_end":180,"column_start":5,"column_end":97}},{"value":"/ [off](struct.Request.html#method.send_string)","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84284,"byte_end":84333,"line_start":181,"line_end":181,"column_start":5,"column_end":54}},{"value":"/ [requests](struct.Request.html#method.send_json)","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84338,"byte_end":84390,"line_start":182,"line_end":182,"column_start":5,"column_end":57}},{"value":"/ all return a `Response`; there is no rust style `Result`.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84395,"byte_end":84456,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84461,"byte_end":84464,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Rather than exposing a custom error type through results, this library has opted","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84469,"byte_end":84553,"line_start":185,"line_end":185,"column_start":5,"column_end":89}},{"value":"/ for representing potential connection/TLS/etc errors as HTTP response codes.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84558,"byte_end":84638,"line_start":186,"line_end":186,"column_start":5,"column_end":85}},{"value":"/ These invented codes are called \"synthetic\".","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84643,"byte_end":84691,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84696,"byte_end":84699,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The idea is that from a library user's point of view the distinction","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84704,"byte_end":84776,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/ of whether a failure originated in the remote server (500, 502) etc, or some transient","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84781,"byte_end":84871,"line_start":190,"line_end":190,"column_start":5,"column_end":95}},{"value":"/ network failure, the code path of handling that would most often be the same.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84876,"byte_end":84957,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84962,"byte_end":84965,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The specific mapping of error to code can be seen in the [`Error`](enum.Error.html) doc.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":84970,"byte_end":85062,"line_start":193,"line_end":193,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85067,"byte_end":85070,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ However if the distinction is important, this method can be used to tell. Also see","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85075,"byte_end":85161,"line_start":195,"line_end":195,"column_start":5,"column_end":91}},{"value":"/ [synthetic_error()](struct.Response.html#method.synthetic_error)","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85166,"byte_end":85234,"line_start":196,"line_end":196,"column_start":5,"column_end":73}},{"value":"/ to see the actual underlying error.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85239,"byte_end":85278,"line_start":197,"line_end":197,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85283,"byte_end":85286,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85291,"byte_end":85298,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ // scheme that this library doesn't understand","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85303,"byte_end":85353,"line_start":200,"line_end":200,"column_start":5,"column_end":55}},{"value":"/ let resp = ureq::get(\"borkedscheme://www.google.com\").call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85358,"byte_end":85423,"line_start":201,"line_end":201,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85428,"byte_end":85431,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ // it's an error","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85436,"byte_end":85456,"line_start":203,"line_end":203,"column_start":5,"column_end":25}},{"value":"/ assert!(resp.error());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85461,"byte_end":85487,"line_start":204,"line_end":204,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85492,"byte_end":85495,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ // synthetic error code 400","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85500,"byte_end":85531,"line_start":206,"line_end":206,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(resp.status(), 400);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85536,"byte_end":85571,"line_start":207,"line_end":207,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85576,"byte_end":85579,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ // tell that it's synthetic.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85584,"byte_end":85616,"line_start":209,"line_end":209,"column_start":5,"column_end":37}},{"value":"/ assert!(resp.synthetic());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85621,"byte_end":85651,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85656,"byte_end":85663,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85887,"byte_end":85902,"line_start":218,"line_end":218,"column_start":12,"column_end":27},"name":"synthetic_error","qualname":"<Response>::synthetic_error","value":"pub fn synthetic_error(&Self) -> &Option<Error>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the actual underlying error when the response is\n [\"synthetic\"](struct.Response.html#method.synthetic).\n","sig":null,"attributes":[{"value":"/ Get a reference to the actual underlying error when the response is","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85742,"byte_end":85813,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ [\"synthetic\"](struct.Response.html#method.synthetic).","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85818,"byte_end":85875,"line_start":217,"line_end":217,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86697,"byte_end":86717,"line_start":243,"line_end":243,"column_start":12,"column_end":32},"name":"into_synthetic_error","qualname":"<Response>::into_synthetic_error","value":"pub fn into_synthetic_error(Self) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the actual underlying error when the response is\n [\"synthetic\"](struct.Response.html#method.synthetic).","sig":null,"attributes":[{"value":"/ Get the actual underlying error when the response is","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":85961,"byte_end":86017,"line_start":222,"line_end":222,"column_start":5,"column_end":61}},{"value":"/ [\"synthetic\"](struct.Response.html#method.synthetic).","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86022,"byte_end":86079,"line_start":223,"line_end":223,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86084,"byte_end":86087,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This consumes the Response and it cannot be used again.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86092,"byte_end":86151,"line_start":225,"line_end":225,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86156,"byte_end":86159,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86164,"byte_end":86177,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86182,"byte_end":86185,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86190,"byte_end":86197,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ // hold onto the error even after dropping the response","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86202,"byte_end":86261,"line_start":230,"line_end":230,"column_start":5,"column_end":64}},{"value":"/ let err = {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86266,"byte_end":86281,"line_start":231,"line_end":231,"column_start":5,"column_end":20}},{"value":"/     // scheme that this library doesn't understand","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86286,"byte_end":86340,"line_start":232,"line_end":232,"column_start":5,"column_end":59}},{"value":"/     let resp = ureq::get(\"borkedscheme://www.example.com\").call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86345,"byte_end":86415,"line_start":233,"line_end":233,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86420,"byte_end":86423,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     // it's a synthetic error","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86428,"byte_end":86461,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/     assert!(resp.error() && resp.synthetic());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86466,"byte_end":86516,"line_start":236,"line_end":236,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86521,"byte_end":86524,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/     // resp is dropped here, but the error lives on","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86529,"byte_end":86584,"line_start":238,"line_end":238,"column_start":5,"column_end":60}},{"value":"/     resp.into_synthetic_error()","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86589,"byte_end":86624,"line_start":239,"line_end":239,"column_start":5,"column_end":40}},{"value":"/ };","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86629,"byte_end":86635,"line_start":240,"line_end":240,"column_start":5,"column_end":11}},{"value":"/ println!(\"{}\", err.unwrap());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86640,"byte_end":86673,"line_start":241,"line_end":241,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86678,"byte_end":86685,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87182,"byte_end":87194,"line_start":259,"line_end":259,"column_start":12,"column_end":24},"name":"content_type","qualname":"<Response>::content_type","value":"pub fn content_type(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The content type part of the \"Content-Type\" header without\n the charset.","sig":null,"attributes":[{"value":"/ The content type part of the \"Content-Type\" header without","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86773,"byte_end":86835,"line_start":247,"line_end":247,"column_start":5,"column_end":67}},{"value":"/ the charset.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86840,"byte_end":86856,"line_start":248,"line_end":248,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86861,"byte_end":86864,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86869,"byte_end":86881,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86886,"byte_end":86889,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86894,"byte_end":86901,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature = \"tls\")] {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86906,"byte_end":86937,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/ let resp = ureq::get(\"https://www.google.com/\").call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":86942,"byte_end":87001,"line_start":254,"line_end":254,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(\"text/html; charset=ISO-8859-1\", resp.header(\"content-type\").unwrap());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87006,"byte_end":87092,"line_start":255,"line_end":255,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(\"text/html\", resp.content_type());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87097,"byte_end":87146,"line_start":256,"line_end":256,"column_start":5,"column_end":54}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87151,"byte_end":87158,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87163,"byte_end":87170,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87880,"byte_end":87887,"line_start":281,"line_end":281,"column_start":12,"column_end":19},"name":"charset","qualname":"<Response>::charset","value":"pub fn charset(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The character set part of the \"Content-Type\" header.native_tls","sig":null,"attributes":[{"value":"/ The character set part of the \"Content-Type\" header.native_tls","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87492,"byte_end":87558,"line_start":270,"line_end":270,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87563,"byte_end":87566,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87571,"byte_end":87583,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87588,"byte_end":87591,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87596,"byte_end":87603,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature = \"tls\")] {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87608,"byte_end":87639,"line_start":275,"line_end":275,"column_start":5,"column_end":36}},{"value":"/ let resp = ureq::get(\"https://www.google.com/\").call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87644,"byte_end":87703,"line_start":276,"line_end":276,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(\"text/html; charset=ISO-8859-1\", resp.header(\"content-type\").unwrap());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87708,"byte_end":87794,"line_start":277,"line_end":277,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(\"ISO-8859-1\", resp.charset());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87799,"byte_end":87844,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87849,"byte_end":87856,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87861,"byte_end":87868,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":89009,"byte_end":89020,"line_start":314,"line_end":314,"column_start":12,"column_end":23},"name":"into_reader","qualname":"<Response>::into_reader","value":"pub fn into_reader(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Turn this response into a `impl Read` of the body.","sig":null,"attributes":[{"value":"/ Turn this response into a `impl Read` of the body.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":87979,"byte_end":88033,"line_start":285,"line_end":285,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88038,"byte_end":88041,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ 1. If `Transfer-Encoding: chunked`, the returned reader will unchunk it","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88046,"byte_end":88121,"line_start":287,"line_end":287,"column_start":5,"column_end":80}},{"value":"/    and any `Content-Length` header is ignored.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88126,"byte_end":88176,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/ 2. If `Content-Length` is set, the returned reader is limited to this byte","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88181,"byte_end":88259,"line_start":289,"line_end":289,"column_start":5,"column_end":83}},{"value":"/    length regardless of how many bytes the server sends.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88264,"byte_end":88324,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/ 3. If no length header, the reader is until server stream end.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88329,"byte_end":88395,"line_start":291,"line_end":291,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88400,"byte_end":88403,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88408,"byte_end":88420,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88425,"byte_end":88428,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88433,"byte_end":88440,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature = \"tls\")] {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88445,"byte_end":88476,"line_start":296,"line_end":296,"column_start":5,"column_end":36}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88481,"byte_end":88503,"line_start":297,"line_end":297,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88508,"byte_end":88511,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let resp =","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88516,"byte_end":88530,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/     ureq::get(\"https://ureq.s3.eu-central-1.amazonaws.com/hello_world.json\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88535,"byte_end":88615,"line_start":300,"line_end":300,"column_start":5,"column_end":85}},{"value":"/         .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88620,"byte_end":88640,"line_start":301,"line_end":301,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88645,"byte_end":88648,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ assert!(resp.has(\"Content-Length\"));","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88653,"byte_end":88693,"line_start":303,"line_end":303,"column_start":5,"column_end":45}},{"value":"/ let len = resp.header(\"Content-Length\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88698,"byte_end":88741,"line_start":304,"line_end":304,"column_start":5,"column_end":48}},{"value":"/     .and_then(|s| s.parse::<usize>().ok()).unwrap();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88746,"byte_end":88802,"line_start":305,"line_end":305,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88807,"byte_end":88810,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let mut reader = resp.into_reader();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88815,"byte_end":88855,"line_start":307,"line_end":307,"column_start":5,"column_end":45}},{"value":"/ let mut bytes = vec![];","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88860,"byte_end":88887,"line_start":308,"line_end":308,"column_start":5,"column_end":32}},{"value":"/ reader.read_to_end(&mut bytes);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88892,"byte_end":88927,"line_start":309,"line_end":309,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88932,"byte_end":88935,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes.len(), len);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88940,"byte_end":88973,"line_start":311,"line_end":311,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88978,"byte_end":88985,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":88990,"byte_end":88997,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91893,"byte_end":91904,"line_start":396,"line_end":396,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Response>::into_string","value":"pub fn into_string(Self) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Turn this response into a String of the response body. By default uses `utf-8`,\n but can work with charset, see below.","sig":null,"attributes":[{"value":"/ Turn this response into a String of the response body. By default uses `utf-8`,","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":90854,"byte_end":90937,"line_start":366,"line_end":366,"column_start":5,"column_end":88}},{"value":"/ but can work with charset, see below.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":90942,"byte_end":90983,"line_start":367,"line_end":367,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":90988,"byte_end":90991,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ This is potentially memory inefficient for large bodies since the","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":90996,"byte_end":91065,"line_start":369,"line_end":369,"column_start":5,"column_end":74}},{"value":"/ implementation first reads the reader to end into a `Vec<u8>` and then","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91070,"byte_end":91144,"line_start":370,"line_end":370,"column_start":5,"column_end":79}},{"value":"/ attempts to decode it using the charset.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91149,"byte_end":91193,"line_start":371,"line_end":371,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91198,"byte_end":91201,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91206,"byte_end":91218,"line_start":373,"line_end":373,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91223,"byte_end":91226,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91231,"byte_end":91238,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature = \"tls\")] {","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91243,"byte_end":91274,"line_start":376,"line_end":376,"column_start":5,"column_end":36}},{"value":"/ let resp =","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91279,"byte_end":91293,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/     ureq::get(\"https://ureq.s3.eu-central-1.amazonaws.com/hello_world.json\")","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91298,"byte_end":91378,"line_start":378,"line_end":378,"column_start":5,"column_end":85}},{"value":"/         .call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91383,"byte_end":91403,"line_start":379,"line_end":379,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91408,"byte_end":91411,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ let text = resp.into_string().unwrap();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91416,"byte_end":91459,"line_start":381,"line_end":381,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91464,"byte_end":91467,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ assert!(text.contains(\"hello\"));","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91472,"byte_end":91508,"line_start":383,"line_end":383,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91513,"byte_end":91520,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91525,"byte_end":91532,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91537,"byte_end":91540,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ## Charset support","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91545,"byte_end":91567,"line_start":387,"line_end":387,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91572,"byte_end":91575,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Requires feature `ureq = { version = \"*\", features = [\"charset\"] }`","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91580,"byte_end":91651,"line_start":389,"line_end":389,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91656,"byte_end":91659,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Attempts to respect the character encoding of the `Content-Type` header and","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91664,"byte_end":91743,"line_start":391,"line_end":391,"column_start":5,"column_end":84}},{"value":"/ falls back to `utf-8`.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91748,"byte_end":91774,"line_start":392,"line_end":392,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91779,"byte_end":91782,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ I.e. `Content-Length: text/plain; charset=iso-8859-1` would be decoded in latin-1.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91787,"byte_end":91873,"line_start":394,"line_end":394,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":91878,"byte_end":91881,"line_start":395,"line_end":395,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":95304,"byte_end":95313,"line_start":500,"line_end":500,"column_start":12,"column_end":21},"name":"from_read","qualname":"<Response>::from_read","value":"pub fn from_read<impl Read: Read>(impl Read) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a response from a Read trait impl.","sig":null,"attributes":[{"value":"/ Create a response from a Read trait impl.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":94852,"byte_end":94897,"line_start":485,"line_end":485,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":94902,"byte_end":94905,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ This is hopefully useful for unit tests.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":94910,"byte_end":94954,"line_start":487,"line_end":487,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":94959,"byte_end":94962,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":94967,"byte_end":94979,"line_start":489,"line_end":489,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":94984,"byte_end":94987,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":94992,"byte_end":94999,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ use std::io::Cursor;","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":95004,"byte_end":95028,"line_start":492,"line_end":492,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":95033,"byte_end":95036,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ let text = \"HTTP/1.1 401 Authorization Required\\r\\n\\r\\nPlease log in\\n\";","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":95041,"byte_end":95117,"line_start":494,"line_end":494,"column_start":5,"column_end":81}},{"value":"/ let read = Cursor::new(text.to_string().into_bytes());","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":95122,"byte_end":95180,"line_start":495,"line_end":495,"column_start":5,"column_end":63}},{"value":"/ let resp = ureq::Response::from_read(read);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":95185,"byte_end":95232,"line_start":496,"line_end":496,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":95237,"byte_end":95240,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(resp.status(), 401);","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":95245,"byte_end":95280,"line_start":498,"line_end":498,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":95285,"byte_end":95292,"line_start":499,"line_end":499,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5595,"byte_end":5600,"line_start":154,"line_end":154,"column_start":8,"column_end":13},"name":"agent","qualname":"::agent","value":"pub fn agent() -> Agent","parent":null,"children":[],"decl_id":null,"docs":" Agents are used to keep state between requests.\n","sig":null,"attributes":[{"value":"/ Agents are used to keep state between requests.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5536,"byte_end":5587,"line_start":153,"line_end":153,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5785,"byte_end":5792,"line_start":163,"line_end":163,"column_start":8,"column_end":15},"name":"request","qualname":"::request","value":"pub fn request(&str, &str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make a request setting the HTTP method via a string.","sig":null,"attributes":[{"value":"/ Make a request setting the HTTP method via a string.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5642,"byte_end":5698,"line_start":158,"line_end":158,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5699,"byte_end":5702,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5703,"byte_end":5710,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ ureq::request(\"GET\", \"https://www.google.com\").call();","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5711,"byte_end":5769,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5770,"byte_end":5777,"line_start":162,"line_end":162,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5905,"byte_end":5908,"line_start":168,"line_end":168,"column_start":8,"column_end":11},"name":"get","qualname":"::get","value":"pub fn get(&str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make a GET request.\n","sig":null,"attributes":[{"value":"/ Make a GET request.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5874,"byte_end":5897,"line_start":167,"line_end":167,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5994,"byte_end":5998,"line_start":173,"line_end":173,"column_start":8,"column_end":12},"name":"head","qualname":"::head","value":"pub fn head(&str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make a HEAD request.\n","sig":null,"attributes":[{"value":"/ Make a HEAD request.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":5962,"byte_end":5986,"line_start":172,"line_end":172,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":6085,"byte_end":6089,"line_start":178,"line_end":178,"column_start":8,"column_end":12},"name":"post","qualname":"::post","value":"pub fn post(&str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make a POST request.\n","sig":null,"attributes":[{"value":"/ Make a POST request.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":6053,"byte_end":6077,"line_start":177,"line_end":177,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":6175,"byte_end":6178,"line_start":183,"line_end":183,"column_start":8,"column_end":11},"name":"put","qualname":"::put","value":"pub fn put(&str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make a PUT request.\n","sig":null,"attributes":[{"value":"/ Make a PUT request.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":6144,"byte_end":6167,"line_start":182,"line_end":182,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":6266,"byte_end":6272,"line_start":188,"line_end":188,"column_start":8,"column_end":14},"name":"delete","qualname":"::delete","value":"pub fn delete(&str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make a DELETE request.\n","sig":null,"attributes":[{"value":"/ Make a DELETE request.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":6232,"byte_end":6258,"line_start":187,"line_end":187,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":6362,"byte_end":6367,"line_start":193,"line_end":193,"column_start":8,"column_end":13},"name":"trace","qualname":"::trace","value":"pub fn trace(&str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make a TRACE request.\n","sig":null,"attributes":[{"value":"/ Make a TRACE request.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":6329,"byte_end":6354,"line_start":192,"line_end":192,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":6459,"byte_end":6466,"line_start":198,"line_end":198,"column_start":8,"column_end":15},"name":"options","qualname":"::options","value":"pub fn options(&str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make an OPTIONS request.\n","sig":null,"attributes":[{"value":"/ Make an OPTIONS request.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":6423,"byte_end":6451,"line_start":197,"line_end":197,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":6558,"byte_end":6563,"line_start":203,"line_end":203,"column_start":8,"column_end":13},"name":"patch","qualname":"::patch","value":"pub fn patch(&str) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Make an PATCH request.\n","sig":null,"attributes":[{"value":"/ Make an PATCH request.","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\lib.rs","byte_start":6524,"byte_end":6550,"line_start":202,"line_end":202,"column_start":1,"column_end":27}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9286,"byte_end":9296,"line_start":67,"line_end":67,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9441,"byte_end":9446,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\body.rs","byte_start":20453,"byte_end":20460,"line_start":27,"line_end":27,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\body.rs","byte_start":20886,"byte_end":20893,"line_start":40,"line_end":40,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\body.rs","byte_start":21322,"byte_end":21333,"line_start":64,"line_end":64,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\body.rs","byte_start":21479,"byte_end":21490,"line_start":70,"line_end":70,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\body.rs","byte_start":21617,"byte_end":21624,"line_start":76,"line_end":76,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":27203,"byte_end":27208,"line_start":36,"line_end":36,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":30283,"byte_end":30288,"line_start":107,"line_end":107,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":30384,"byte_end":30389,"line_start":113,"line_end":113,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":30529,"byte_end":30534,"line_start":119,"line_end":119,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31043,"byte_end":31049,"line_start":18,"line_end":18,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31160,"byte_end":31166,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":33789,"byte_end":33795,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","byte_start":37657,"byte_end":37671,"line_start":64,"line_end":64,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","byte_start":37965,"byte_end":37979,"line_start":75,"line_end":75,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","byte_start":42646,"byte_end":42653,"line_start":208,"line_end":208,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","byte_start":42889,"byte_end":42896,"line_start":219,"line_end":219,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","byte_start":47623,"byte_end":47637,"line_start":374,"line_end":374,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","byte_start":48767,"byte_end":48781,"line_start":412,"line_end":412,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":49542,"byte_end":49547,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":58023,"byte_end":58030,"line_start":54,"line_end":54,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":58528,"byte_end":58535,"line_start":71,"line_end":71,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":77126,"byte_end":77138,"line_start":655,"line_end":655,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":77874,"byte_end":77885,"line_start":13,"line_end":13,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":78059,"byte_end":78060,"line_start":19,"line_end":19,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":78320,"byte_end":78331,"line_start":32,"line_end":32,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":78450,"byte_end":78461,"line_start":41,"line_end":41,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":78599,"byte_end":78610,"line_start":47,"line_end":47,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":78735,"byte_end":78746,"line_start":55,"line_end":55,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80935,"byte_end":80943,"line_start":67,"line_end":67,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81171,"byte_end":81179,"line_start":78,"line_end":78,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":97088,"byte_end":97096,"line_start":569,"line_end":569,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":97897,"byte_end":97902,"line_start":594,"line_end":594,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":99357,"byte_end":99368,"line_start":650,"line_end":650,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":99548,"byte_end":99559,"line_start":660,"line_end":660,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":100793,"byte_end":100799,"line_start":699,"line_end":699,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":104823,"byte_end":104834,"line_start":841,"line_end":841,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":106408,"byte_end":106422,"line_start":48,"line_end":48,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":106583,"byte_end":106589,"line_start":54,"line_end":54,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":106703,"byte_end":106717,"line_start":60,"line_end":60,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":108112,"byte_end":108118,"line_start":96,"line_end":96,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":108699,"byte_end":108705,"line_start":116,"line_end":116,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":111201,"byte_end":111207,"line_start":192,"line_end":192,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":111748,"byte_end":111754,"line_start":208,"line_end":208,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":112741,"byte_end":112747,"line_start":238,"line_end":238,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":113876,"byte_end":113882,"line_start":285,"line_end":285,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\unit.rs","byte_start":126636,"byte_end":126640,"line_start":31,"line_end":31,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9286,"byte_end":9296,"line_start":67,"line_end":67,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\agent.rs","byte_start":9441,"byte_end":9446,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\body.rs","byte_start":20453,"byte_end":20460,"line_start":27,"line_end":27,"column_start":21,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":47},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\body.rs","byte_start":20886,"byte_end":20893,"line_start":40,"line_end":40,"column_start":18,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":47},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\body.rs","byte_start":21322,"byte_end":21333,"line_start":64,"line_end":64,"column_start":21,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":65},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\body.rs","byte_start":21479,"byte_end":21490,"line_start":70,"line_end":70,"column_start":10,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":65},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\body.rs","byte_start":21617,"byte_end":21624,"line_start":76,"line_end":76,"column_start":10,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":47},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":27203,"byte_end":27208,"line_start":36,"line_end":36,"column_start":6,"column_end":11},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":30283,"byte_end":30288,"line_start":107,"line_end":107,"column_start":26,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":30384,"byte_end":30389,"line_start":113,"line_end":113,"column_start":23,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":6327}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\error.rs","byte_start":30529,"byte_end":30534,"line_start":119,"line_end":119,"column_start":28,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":566},"to":{"krate":1,"index":1690}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31043,"byte_end":31049,"line_start":18,"line_end":18,"column_start":21,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":601},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":31160,"byte_end":31166,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\header.rs","byte_start":33789,"byte_end":33795,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":601},"to":{"krate":2,"index":7908}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","byte_start":37657,"byte_end":37671,"line_start":64,"line_end":64,"column_start":18,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":610},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","byte_start":37965,"byte_end":37979,"line_start":75,"line_end":75,"column_start":6,"column_end":20},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","byte_start":42646,"byte_end":42653,"line_start":208,"line_end":208,"column_start":21,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","byte_start":42889,"byte_end":42896,"line_start":219,"line_end":219,"column_start":6,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","byte_start":47623,"byte_end":47637,"line_start":374,"line_end":374,"column_start":38,"column_end":52},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\pool.rs","byte_start":48767,"byte_end":48781,"line_start":412,"line_end":412,"column_start":47,"column_end":61},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":163},"to":{"krate":1,"index":2993}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\proxy.rs","byte_start":49542,"byte_end":49547,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":58023,"byte_end":58030,"line_start":54,"line_end":54,"column_start":21,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":673},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":58528,"byte_end":58535,"line_start":71,"line_end":71,"column_start":6,"column_end":13},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\request.rs","byte_start":77126,"byte_end":77138,"line_start":655,"line_end":655,"column_start":21,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":690},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":77724,"byte_end":77728,"line_start":6,"line_end":6,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1971},"to":{"krate":0,"index":275}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":77731,"byte_end":77735,"line_start":6,"line_end":6,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1983},"to":{"krate":0,"index":275}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":77874,"byte_end":77885,"line_start":13,"line_end":13,"column_start":19,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":695},"to":{"krate":0,"index":275}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":78059,"byte_end":78060,"line_start":19,"line_end":19,"column_start":22,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":281},"to":{"krate":0,"index":275}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":78320,"byte_end":78331,"line_start":32,"line_end":32,"column_start":21,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":699},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":78450,"byte_end":78461,"line_start":41,"line_end":41,"column_start":21,"column_end":32},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":699},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":78599,"byte_end":78610,"line_start":47,"line_end":47,"column_start":26,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":699},"to":{"krate":2,"index":2142}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\resolve.rs","byte_start":78735,"byte_end":78746,"line_start":55,"line_end":55,"column_start":18,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":699},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":80935,"byte_end":80943,"line_start":67,"line_end":67,"column_start":21,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":81171,"byte_end":81179,"line_start":78,"line_end":78,"column_start":6,"column_end":14},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":97088,"byte_end":97096,"line_start":569,"line_end":569,"column_start":18,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":7908}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":97897,"byte_end":97902,"line_start":594,"line_end":594,"column_start":25,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":1886}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":99357,"byte_end":99368,"line_start":650,"line_end":650,"column_start":15,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":99548,"byte_end":99559,"line_start":660,"line_end":660,"column_start":24,"column_end":35},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":378},"to":{"krate":1,"index":2993}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":100793,"byte_end":100799,"line_start":699,"line_end":699,"column_start":40,"column_end":46},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\response.rs","byte_start":104823,"byte_end":104834,"line_start":841,"line_end":841,"column_start":15,"column_end":26},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":396},"to":{"krate":1,"index":2993}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":106408,"byte_end":106422,"line_start":48,"line_end":48,"column_start":6,"column_end":20},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":106583,"byte_end":106589,"line_start":54,"line_end":54,"column_start":31,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":106703,"byte_end":106717,"line_start":60,"line_end":60,"column_start":15,"column_end":29},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":433},"to":{"krate":1,"index":2993}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":108112,"byte_end":108118,"line_start":96,"line_end":96,"column_start":21,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":108699,"byte_end":108705,"line_start":116,"line_end":116,"column_start":6,"column_end":12},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":111201,"byte_end":111207,"line_start":192,"line_end":192,"column_start":15,"column_end":21},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":423},"to":{"krate":1,"index":2993}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":111748,"byte_end":111754,"line_start":208,"line_end":208,"column_start":18,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":423},"to":{"krate":1,"index":3076}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":112741,"byte_end":112747,"line_start":238,"line_end":238,"column_start":41,"column_end":47},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\stream.rs","byte_start":113876,"byte_end":113882,"line_start":285,"line_end":285,"column_start":16,"column_end":22},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":423},"to":{"krate":1,"index":3052}},{"span":{"file_name":"C:\\Users\\Matthew\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ureq-1.5.2\\src\\unit.rs","byte_start":126636,"byte_end":126640,"line_start":31,"line_end":31,"column_start":6,"column_end":10},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":504},"to":{"krate":4294967295,"index":4294967295}}]}